using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace PublisherData.Migrations
{
    public partial class SeedAll : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Artists",
                columns: table => new
                {
                    ArtistId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FirstName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    LastName = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Artists", x => x.ArtistId);
                });

            migrationBuilder.CreateTable(
                name: "Authors",
                columns: table => new
                {
                    AuthorId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FirstName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    LastName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    LastUpdated = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Authors", x => x.AuthorId);
                });

            migrationBuilder.CreateTable(
                name: "Books",
                columns: table => new
                {
                    BookId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Title = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PublishDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    BasePrice = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
                    AuthorId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Books", x => x.BookId);
                    table.ForeignKey(
                        name: "FK_Books_Authors_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "Authors",
                        principalColumn: "AuthorId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Covers",
                columns: table => new
                {
                    CoverId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DesignIdeas = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DigitalOnly = table.Column<bool>(type: "bit", nullable: false),
                    BookId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Covers", x => x.CoverId);
                    table.ForeignKey(
                        name: "FK_Covers_Books_BookId",
                        column: x => x.BookId,
                        principalTable: "Books",
                        principalColumn: "BookId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ArtistCover",
                columns: table => new
                {
                    ArtistsArtistId = table.Column<int>(type: "int", nullable: false),
                    CoversCoverId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArtistCover", x => new { x.ArtistsArtistId, x.CoversCoverId });
                    table.ForeignKey(
                        name: "FK_ArtistCover_Artists_ArtistsArtistId",
                        column: x => x.ArtistsArtistId,
                        principalTable: "Artists",
                        principalColumn: "ArtistId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ArtistCover_Covers_CoversCoverId",
                        column: x => x.CoversCoverId,
                        principalTable: "Covers",
                        principalColumn: "CoverId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 1, "Danial", "Reichel" },
                    { 2, "Kyler", "Konopelski" },
                    { 3, "Lou", "Wisoky" },
                    { 4, "Prince", "Hoeger" },
                    { 5, "Erwin", "Bosco" },
                    { 6, "Burley", "Hills" },
                    { 7, "Simone", "Halvorson" },
                    { 8, "Simone", "Hettinger" },
                    { 9, "Dwight", "Haag" },
                    { 10, "Chelsea", "Schuppe" },
                    { 11, "Bennie", "Corkery" },
                    { 12, "Jaleel", "Volkman" },
                    { 13, "Concepcion", "O'Reilly" },
                    { 14, "Fay", "Schaefer" },
                    { 15, "Bret", "Weber" },
                    { 16, "Rebecca", "Grady" },
                    { 17, "Golden", "Spencer" },
                    { 18, "Kennith", "Dooley" },
                    { 19, "Ray", "Ziemann" },
                    { 20, "Kennedi", "Murray" },
                    { 21, "Demetrius", "VonRueden" },
                    { 22, "Greta", "Goldner" },
                    { 23, "Conner", "Frami" },
                    { 24, "Alyce", "Nitzsche" },
                    { 25, "Modesto", "Cronin" },
                    { 26, "Xzavier", "Schowalter" },
                    { 27, "Vince", "Williamson" },
                    { 28, "Daren", "Osinski" },
                    { 29, "Verdie", "Braun" },
                    { 30, "Julio", "Raynor" },
                    { 31, "Herta", "Brakus" },
                    { 32, "Edwin", "Hackett" },
                    { 33, "Marcia", "Flatley" },
                    { 34, "Nikko", "Schamberger" },
                    { 35, "Makenna", "Shields" },
                    { 36, "Matteo", "Kshlerin" },
                    { 37, "Granville", "Green" },
                    { 38, "Gail", "Rodriguez" },
                    { 39, "Dejah", "Mueller" },
                    { 40, "Ava", "Feil" },
                    { 41, "Mason", "Torphy" },
                    { 42, "Jolie", "Kunze" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 43, "Andre", "Abernathy" },
                    { 44, "Isabel", "Prosacco" },
                    { 45, "Beverly", "Braun" },
                    { 46, "Bernie", "Dicki" },
                    { 47, "Cassandra", "West" },
                    { 48, "Madison", "Hilpert" },
                    { 49, "Bennett", "Bergstrom" },
                    { 50, "Jeramie", "Morar" },
                    { 51, "Aditya", "Schamberger" },
                    { 52, "Donnie", "Hermiston" },
                    { 53, "Shanna", "Simonis" },
                    { 54, "Clare", "Tromp" },
                    { 55, "Catalina", "Lueilwitz" },
                    { 56, "Jett", "Jacobson" },
                    { 57, "Alverta", "West" },
                    { 58, "Kyle", "Gerhold" },
                    { 59, "Elmira", "Kulas" },
                    { 60, "Beatrice", "Kub" },
                    { 61, "Lysanne", "Quitzon" },
                    { 62, "Kennith", "Fay" },
                    { 63, "Emilia", "Gislason" },
                    { 64, "Wyatt", "Rolfson" },
                    { 65, "Jacquelyn", "Murazik" },
                    { 66, "Thomas", "Durgan" },
                    { 67, "Theo", "Larson" },
                    { 68, "Frank", "Kshlerin" },
                    { 69, "Omari", "Kilback" },
                    { 70, "Johan", "Jacobson" },
                    { 71, "Delta", "Baumbach" },
                    { 72, "Isai", "Dickens" },
                    { 73, "Sophia", "Fadel" },
                    { 74, "Zachery", "Cummerata" },
                    { 75, "Tania", "Kuhic" },
                    { 76, "Zoey", "Botsford" },
                    { 77, "Lesly", "Homenick" },
                    { 78, "Ethyl", "Pagac" },
                    { 79, "Lindsay", "Cummings" },
                    { 80, "Modesta", "Okuneva" },
                    { 81, "Nicholaus", "Connelly" },
                    { 82, "Pablo", "Little" },
                    { 83, "Hermina", "Balistreri" },
                    { 84, "Price", "Koelpin" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 85, "Amina", "Conn" },
                    { 86, "Suzanne", "Hilpert" },
                    { 87, "Evan", "Reilly" },
                    { 88, "Annamarie", "Legros" },
                    { 89, "Chandler", "Herzog" },
                    { 90, "Tyrese", "Howe" },
                    { 91, "Duncan", "Hegmann" },
                    { 92, "Trystan", "Bergnaum" },
                    { 93, "Kelton", "Baumbach" },
                    { 94, "Lew", "Nienow" },
                    { 95, "Archibald", "Heaney" },
                    { 96, "June", "Corwin" },
                    { 97, "Kory", "Lockman" },
                    { 98, "Wilma", "Swaniawski" },
                    { 99, "Eladio", "DuBuque" },
                    { 100, "Vivianne", "Tillman" },
                    { 101, "Alexanne", "Konopelski" },
                    { 102, "Lia", "O'Connell" },
                    { 103, "Lilian", "Leffler" },
                    { 104, "Buddy", "King" },
                    { 105, "Reva", "Wisozk" },
                    { 106, "Beatrice", "Reichel" },
                    { 107, "Roy", "Effertz" },
                    { 108, "Sigrid", "Wiegand" },
                    { 109, "Major", "Brekke" },
                    { 110, "Evangeline", "Kuvalis" },
                    { 111, "Andrew", "Wilkinson" },
                    { 112, "Cloyd", "Pfeffer" },
                    { 113, "Ava", "Oberbrunner" },
                    { 114, "Sigrid", "Rutherford" },
                    { 115, "River", "Renner" },
                    { 116, "Luis", "Stehr" },
                    { 117, "Nikko", "Rolfson" },
                    { 118, "Yesenia", "Stehr" },
                    { 119, "Fred", "Mayert" },
                    { 120, "Ward", "Blanda" },
                    { 121, "Giovanna", "King" },
                    { 122, "Chester", "Jerde" },
                    { 123, "Berry", "Lind" },
                    { 124, "Amara", "Murray" },
                    { 125, "Arthur", "Klocko" },
                    { 126, "Bonita", "Durgan" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 127, "Myrna", "Baumbach" },
                    { 128, "Lempi", "Roob" },
                    { 129, "Bill", "Boyle" },
                    { 130, "Santa", "Cole" },
                    { 131, "Tyreek", "Wolff" },
                    { 132, "Waino", "Waelchi" },
                    { 133, "Missouri", "Hodkiewicz" },
                    { 134, "Bryce", "Boehm" },
                    { 135, "Heather", "Olson" },
                    { 136, "Sophie", "Dare" },
                    { 137, "Angelica", "Jacobson" },
                    { 138, "Webster", "Schinner" },
                    { 139, "Emmitt", "Ratke" },
                    { 140, "Leta", "Batz" },
                    { 141, "Rosella", "Lockman" },
                    { 142, "Virgil", "Nikolaus" },
                    { 143, "Norene", "Gulgowski" },
                    { 144, "Julian", "Swaniawski" },
                    { 145, "Jessika", "Olson" },
                    { 146, "Sherman", "Kuvalis" },
                    { 147, "Mollie", "Predovic" },
                    { 148, "Dayana", "Walker" },
                    { 149, "Jarrod", "Schultz" },
                    { 150, "Leanna", "Lemke" },
                    { 151, "Federico", "Harris" },
                    { 152, "Ashtyn", "Stokes" },
                    { 153, "Jacky", "Morissette" },
                    { 154, "Robbie", "Upton" },
                    { 155, "Meaghan", "Veum" },
                    { 156, "Riley", "Schinner" },
                    { 157, "Vivian", "Spencer" },
                    { 158, "Michael", "Baumbach" },
                    { 159, "Sid", "Sauer" },
                    { 160, "Collin", "Hodkiewicz" },
                    { 161, "Fabiola", "Daniel" },
                    { 162, "Amelia", "Lesch" },
                    { 163, "Jazmyn", "Schimmel" },
                    { 164, "Bert", "Harvey" },
                    { 165, "Deborah", "Borer" },
                    { 166, "Calista", "Gutkowski" },
                    { 167, "Ariane", "Lowe" },
                    { 168, "Daphne", "Kunze" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 169, "Erin", "Zulauf" },
                    { 170, "Caden", "Weber" },
                    { 171, "Eleanore", "Beer" },
                    { 172, "Arnoldo", "O'Kon" },
                    { 173, "Merl", "Friesen" },
                    { 174, "Myah", "Johnston" },
                    { 175, "Dameon", "Hilpert" },
                    { 176, "Darwin", "Bechtelar" },
                    { 177, "Hipolito", "Swift" },
                    { 178, "Jermaine", "Gislason" },
                    { 179, "Velda", "Halvorson" },
                    { 180, "Kolby", "Heathcote" },
                    { 181, "Chauncey", "Nienow" },
                    { 182, "Norval", "Olson" },
                    { 183, "Florian", "Torp" },
                    { 184, "Allison", "Wisoky" },
                    { 185, "Ernie", "Russel" },
                    { 186, "Kaya", "Mann" },
                    { 187, "Clemens", "Howell" },
                    { 188, "Cheyanne", "Hackett" },
                    { 189, "Deangelo", "Zboncak" },
                    { 190, "Raphael", "Lehner" },
                    { 191, "Lennie", "Friesen" },
                    { 192, "Leola", "Bruen" },
                    { 193, "Jannie", "McCullough" },
                    { 194, "Donnie", "Oberbrunner" },
                    { 195, "Delilah", "Zboncak" },
                    { 196, "Cecelia", "Hessel" },
                    { 197, "Hadley", "Kshlerin" },
                    { 198, "Jillian", "Gerhold" },
                    { 199, "Devon", "Stroman" },
                    { 200, "Kevon", "Beier" },
                    { 201, "Camilla", "Hartmann" },
                    { 202, "Hassie", "Bradtke" },
                    { 203, "Malika", "Cummerata" },
                    { 204, "Fanny", "Waelchi" },
                    { 205, "Bella", "Cummings" },
                    { 206, "Hugh", "Kassulke" },
                    { 207, "Martina", "Bauch" },
                    { 208, "Shanie", "Frami" },
                    { 209, "Orin", "Huel" },
                    { 210, "Idella", "Bergstrom" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 211, "Summer", "Wolf" },
                    { 212, "Wilfredo", "O'Conner" },
                    { 213, "Arvel", "Nikolaus" },
                    { 214, "Bertrand", "Windler" },
                    { 215, "Rickie", "Wiza" },
                    { 216, "Aidan", "Bosco" },
                    { 217, "Geovany", "Schiller" },
                    { 218, "Jedidiah", "Will" },
                    { 219, "Jeffery", "Predovic" },
                    { 220, "Maude", "Trantow" },
                    { 221, "Easton", "VonRueden" },
                    { 222, "Lenore", "Weimann" },
                    { 223, "Marjory", "Hagenes" },
                    { 224, "Geo", "Sporer" },
                    { 225, "Demario", "Gleason" },
                    { 226, "Modesto", "Price" },
                    { 227, "Lydia", "O'Kon" },
                    { 228, "Makayla", "Wehner" },
                    { 229, "Dexter", "Waelchi" },
                    { 230, "Luigi", "Sporer" },
                    { 231, "Grayson", "Homenick" },
                    { 232, "Alta", "Kilback" },
                    { 233, "Sharon", "Reynolds" },
                    { 234, "Corrine", "Lemke" },
                    { 235, "Magdalena", "Parker" },
                    { 236, "Abdullah", "Wilkinson" },
                    { 237, "Alyson", "West" },
                    { 238, "Giles", "Kreiger" },
                    { 239, "Pedro", "Klocko" },
                    { 240, "Lola", "Koch" },
                    { 241, "Eloy", "Rippin" },
                    { 242, "Fredy", "Turcotte" },
                    { 243, "Maximo", "Braun" },
                    { 244, "Deangelo", "Yost" },
                    { 245, "Era", "Langworth" },
                    { 246, "Kaia", "Effertz" },
                    { 247, "Coy", "Bosco" },
                    { 248, "Queen", "Kunze" },
                    { 249, "Tremayne", "Heathcote" },
                    { 250, "Axel", "Beier" },
                    { 251, "Janie", "Mills" },
                    { 252, "Teagan", "Stroman" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 253, "Mya", "Spinka" },
                    { 254, "Hazle", "Connelly" },
                    { 255, "Ford", "Ernser" },
                    { 256, "Brenna", "Bradtke" },
                    { 257, "Fannie", "Mills" },
                    { 258, "Odie", "Reynolds" },
                    { 259, "Arlene", "Waelchi" },
                    { 260, "Baylee", "D'Amore" },
                    { 261, "Liam", "Johnson" },
                    { 262, "Tressie", "Roberts" },
                    { 263, "Michel", "Rodriguez" },
                    { 264, "Wilhelmine", "Champlin" },
                    { 265, "Freida", "Larson" },
                    { 266, "Gayle", "Ortiz" },
                    { 267, "Elliot", "Boyer" },
                    { 268, "Daisy", "Hauck" },
                    { 269, "Alexie", "Zboncak" },
                    { 270, "Maybelle", "Jakubowski" },
                    { 271, "Chelsey", "Jenkins" },
                    { 272, "Immanuel", "Schulist" },
                    { 273, "Daisy", "Gerhold" },
                    { 274, "Ophelia", "Crona" },
                    { 275, "Claudie", "Smitham" },
                    { 276, "Webster", "Homenick" },
                    { 277, "Cullen", "Simonis" },
                    { 278, "Florida", "Roob" },
                    { 279, "Zetta", "O'Reilly" },
                    { 280, "Velma", "Veum" },
                    { 281, "Bobbie", "Wolff" },
                    { 282, "Clementina", "Gottlieb" },
                    { 283, "Rhett", "Nader" },
                    { 284, "Haylee", "Herzog" },
                    { 285, "Seamus", "Price" },
                    { 286, "Zola", "Haag" },
                    { 287, "Vivianne", "Gislason" },
                    { 288, "Eliza", "Bashirian" },
                    { 289, "Marcelina", "Renner" },
                    { 290, "Katlynn", "Jacobi" },
                    { 291, "Chester", "Leannon" },
                    { 292, "Garland", "Shields" },
                    { 293, "Lisette", "Treutel" },
                    { 294, "Flavie", "Monahan" }
                });

            migrationBuilder.InsertData(
                table: "Artists",
                columns: new[] { "ArtistId", "FirstName", "LastName" },
                values: new object[,]
                {
                    { 295, "Yasmine", "Bernhard" },
                    { 296, "Diego", "Sawayn" },
                    { 297, "Jody", "Sawayn" },
                    { 298, "Elmer", "Stokes" },
                    { 299, "Erica", "D'Amore" },
                    { 300, "Justus", "Wuckert" }
                });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "AuthorId", "FirstName", "LastName", "LastUpdated" },
                values: new object[,]
                {
                    { 1, "Augustine", "Simonis", new DateTime(2024, 2, 4, 18, 10, 12, 592, DateTimeKind.Local).AddTicks(6354) },
                    { 2, "Enrico", "Monahan", new DateTime(2020, 1, 19, 8, 19, 15, 90, DateTimeKind.Local).AddTicks(8810) },
                    { 3, "Eldon", "Jaskolski", new DateTime(2022, 1, 29, 16, 47, 5, 575, DateTimeKind.Local).AddTicks(1017) },
                    { 4, "Ferne", "Dicki", new DateTime(2023, 8, 25, 15, 55, 4, 928, DateTimeKind.Local).AddTicks(3911) },
                    { 5, "Oral", "Torp", new DateTime(2024, 3, 9, 20, 30, 37, 458, DateTimeKind.Local).AddTicks(5330) },
                    { 6, "Ressie", "Langosh", new DateTime(2020, 10, 22, 2, 58, 39, 311, DateTimeKind.Local).AddTicks(1119) },
                    { 7, "Aniya", "Hintz", new DateTime(2022, 12, 24, 20, 47, 1, 227, DateTimeKind.Local).AddTicks(2745) },
                    { 8, "Kiley", "Tremblay", new DateTime(2019, 1, 1, 17, 45, 25, 529, DateTimeKind.Local).AddTicks(3073) },
                    { 9, "Alena", "Hermann", new DateTime(2018, 10, 31, 3, 21, 47, 191, DateTimeKind.Local).AddTicks(6433) },
                    { 10, "Mireille", "Ullrich", new DateTime(2016, 5, 21, 18, 3, 35, 867, DateTimeKind.Local).AddTicks(9201) },
                    { 11, "Jazmin", "Bartoletti", new DateTime(2022, 7, 23, 17, 40, 40, 922, DateTimeKind.Local).AddTicks(9690) },
                    { 12, "Leonora", "Zulauf", new DateTime(2021, 10, 31, 5, 38, 27, 530, DateTimeKind.Local).AddTicks(5034) },
                    { 13, "Chris", "Collier", new DateTime(2023, 9, 4, 12, 18, 48, 419, DateTimeKind.Local).AddTicks(5617) },
                    { 14, "Bill", "Gottlieb", new DateTime(2022, 8, 12, 15, 52, 59, 355, DateTimeKind.Local).AddTicks(9181) },
                    { 15, "Wilfredo", "Smith", new DateTime(2020, 4, 4, 18, 34, 41, 588, DateTimeKind.Local).AddTicks(4769) },
                    { 16, "Karl", "Hackett", new DateTime(2020, 7, 23, 4, 17, 38, 277, DateTimeKind.Local).AddTicks(4539) },
                    { 17, "Rollin", "Kutch", new DateTime(2021, 3, 20, 20, 36, 33, 874, DateTimeKind.Local).AddTicks(1478) },
                    { 18, "Tyrell", "Will", new DateTime(2018, 3, 2, 10, 47, 38, 876, DateTimeKind.Local).AddTicks(9379) },
                    { 19, "Verona", "Sawayn", new DateTime(2020, 4, 28, 8, 1, 57, 192, DateTimeKind.Local).AddTicks(5117) },
                    { 20, "Webster", "Morissette", new DateTime(2016, 11, 12, 12, 39, 28, 698, DateTimeKind.Local).AddTicks(2257) },
                    { 21, "Sydney", "Rath", new DateTime(2019, 9, 11, 17, 0, 19, 750, DateTimeKind.Local).AddTicks(7185) },
                    { 22, "Missouri", "Koepp", new DateTime(2021, 8, 11, 11, 40, 23, 724, DateTimeKind.Local).AddTicks(4865) },
                    { 23, "Murphy", "Beahan", new DateTime(2020, 7, 27, 1, 6, 38, 641, DateTimeKind.Local).AddTicks(7052) },
                    { 24, "Claudie", "Blanda", new DateTime(2018, 1, 18, 5, 32, 59, 759, DateTimeKind.Local).AddTicks(4975) },
                    { 25, "Ciara", "Schmeler", new DateTime(2020, 10, 12, 6, 13, 31, 281, DateTimeKind.Local).AddTicks(4572) },
                    { 26, "Aryanna", "Labadie", new DateTime(2018, 1, 25, 5, 38, 15, 206, DateTimeKind.Local).AddTicks(6812) },
                    { 27, "Amaya", "Marvin", new DateTime(2022, 3, 10, 22, 42, 27, 358, DateTimeKind.Local).AddTicks(9377) },
                    { 28, "Maddison", "Schimmel", new DateTime(2021, 9, 6, 13, 17, 7, 356, DateTimeKind.Local).AddTicks(9887) },
                    { 29, "Patience", "Predovic", new DateTime(2017, 10, 11, 20, 54, 44, 23, DateTimeKind.Local).AddTicks(9073) },
                    { 30, "Lyda", "King", new DateTime(2023, 3, 24, 10, 32, 5, 288, DateTimeKind.Local).AddTicks(6977) },
                    { 31, "Brad", "Ortiz", new DateTime(2022, 4, 4, 5, 29, 30, 41, DateTimeKind.Local).AddTicks(5950) },
                    { 32, "Mary", "Stehr", new DateTime(2016, 3, 3, 12, 22, 57, 953, DateTimeKind.Local).AddTicks(4141) },
                    { 33, "Lizzie", "Emmerich", new DateTime(2020, 8, 26, 15, 54, 45, 175, DateTimeKind.Local).AddTicks(9506) },
                    { 34, "Chadrick", "Simonis", new DateTime(2016, 12, 23, 18, 52, 15, 535, DateTimeKind.Local).AddTicks(221) },
                    { 35, "Sheila", "Lehner", new DateTime(2020, 12, 25, 2, 4, 14, 605, DateTimeKind.Local).AddTicks(1428) },
                    { 36, "Ofelia", "Murphy", new DateTime(2023, 7, 25, 4, 28, 15, 587, DateTimeKind.Local).AddTicks(3075) }
                });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "AuthorId", "FirstName", "LastName", "LastUpdated" },
                values: new object[,]
                {
                    { 37, "Neil", "Ritchie", new DateTime(2017, 5, 13, 23, 13, 38, 389, DateTimeKind.Local).AddTicks(7086) },
                    { 38, "Oscar", "Keebler", new DateTime(2016, 12, 30, 22, 7, 11, 15, DateTimeKind.Local).AddTicks(9221) },
                    { 39, "Susie", "DuBuque", new DateTime(2020, 11, 3, 21, 20, 25, 86, DateTimeKind.Local).AddTicks(8082) },
                    { 40, "Macey", "Stracke", new DateTime(2023, 9, 24, 14, 56, 44, 537, DateTimeKind.Local).AddTicks(5837) },
                    { 41, "Julien", "Kulas", new DateTime(2018, 11, 3, 12, 55, 40, 96, DateTimeKind.Local).AddTicks(8673) },
                    { 42, "Easton", "Runolfsdottir", new DateTime(2023, 4, 2, 18, 38, 53, 130, DateTimeKind.Local).AddTicks(5854) },
                    { 43, "Abraham", "Batz", new DateTime(2021, 7, 5, 15, 46, 25, 497, DateTimeKind.Local).AddTicks(1913) },
                    { 44, "Chaz", "Heathcote", new DateTime(2023, 10, 21, 20, 19, 38, 510, DateTimeKind.Local).AddTicks(4822) },
                    { 45, "Elmira", "Welch", new DateTime(2021, 12, 20, 19, 30, 48, 343, DateTimeKind.Local).AddTicks(193) },
                    { 46, "Jaleel", "Hudson", new DateTime(2019, 10, 4, 1, 16, 9, 709, DateTimeKind.Local).AddTicks(9562) },
                    { 47, "Elvis", "Bartell", new DateTime(2023, 11, 4, 22, 15, 43, 653, DateTimeKind.Local).AddTicks(8818) },
                    { 48, "Antwon", "Kreiger", new DateTime(2023, 6, 30, 2, 8, 26, 591, DateTimeKind.Local).AddTicks(6793) },
                    { 49, "Kurt", "Fritsch", new DateTime(2016, 5, 22, 8, 40, 4, 784, DateTimeKind.Local).AddTicks(6047) },
                    { 50, "Delilah", "Kulas", new DateTime(2016, 10, 23, 9, 41, 21, 696, DateTimeKind.Local).AddTicks(8744) },
                    { 51, "Carolyn", "Block", new DateTime(2022, 11, 13, 23, 32, 18, 962, DateTimeKind.Local).AddTicks(7125) },
                    { 52, "Minnie", "Gusikowski", new DateTime(2019, 5, 9, 18, 10, 27, 529, DateTimeKind.Local).AddTicks(9434) },
                    { 53, "Malcolm", "Ondricka", new DateTime(2020, 12, 26, 16, 2, 40, 852, DateTimeKind.Local).AddTicks(7991) },
                    { 54, "Malinda", "Sawayn", new DateTime(2016, 5, 27, 8, 34, 21, 633, DateTimeKind.Local).AddTicks(1831) },
                    { 55, "Aidan", "Tillman", new DateTime(2018, 8, 8, 1, 8, 56, 287, DateTimeKind.Local).AddTicks(228) },
                    { 56, "Vivienne", "Simonis", new DateTime(2016, 2, 19, 10, 47, 52, 353, DateTimeKind.Local).AddTicks(8065) },
                    { 57, "Kacey", "Langworth", new DateTime(2022, 10, 4, 20, 19, 49, 69, DateTimeKind.Local).AddTicks(9453) },
                    { 58, "Enrique", "Bartell", new DateTime(2022, 6, 5, 22, 15, 0, 413, DateTimeKind.Local).AddTicks(608) },
                    { 59, "Rosella", "Wunsch", new DateTime(2017, 3, 23, 7, 51, 47, 758, DateTimeKind.Local).AddTicks(6) },
                    { 60, "Delmer", "Grimes", new DateTime(2020, 2, 29, 9, 34, 9, 733, DateTimeKind.Local).AddTicks(4784) },
                    { 61, "Name", "Braun", new DateTime(2020, 9, 15, 14, 35, 52, 152, DateTimeKind.Local).AddTicks(4115) },
                    { 62, "Kamren", "Emard", new DateTime(2022, 7, 8, 17, 29, 7, 160, DateTimeKind.Local).AddTicks(9678) },
                    { 63, "Helmer", "Brakus", new DateTime(2023, 5, 14, 0, 27, 59, 932, DateTimeKind.Local).AddTicks(1952) },
                    { 64, "Jayden", "Bashirian", new DateTime(2021, 5, 4, 9, 34, 11, 33, DateTimeKind.Local).AddTicks(4227) },
                    { 65, "Alexandrea", "Powlowski", new DateTime(2023, 2, 26, 15, 13, 9, 661, DateTimeKind.Local).AddTicks(7054) },
                    { 66, "Rosalinda", "Labadie", new DateTime(2020, 9, 3, 7, 51, 34, 919, DateTimeKind.Local).AddTicks(6274) },
                    { 67, "Fern", "Marks", new DateTime(2017, 5, 15, 16, 35, 40, 438, DateTimeKind.Local).AddTicks(3820) },
                    { 68, "Golda", "McClure", new DateTime(2023, 6, 15, 6, 6, 17, 658, DateTimeKind.Local).AddTicks(7408) },
                    { 69, "Tia", "Fritsch", new DateTime(2022, 9, 16, 0, 13, 35, 805, DateTimeKind.Local).AddTicks(641) },
                    { 70, "Jaylan", "Kuhlman", new DateTime(2016, 7, 5, 18, 51, 31, 700, DateTimeKind.Local).AddTicks(8947) },
                    { 71, "Harvey", "Renner", new DateTime(2021, 2, 22, 14, 29, 37, 781, DateTimeKind.Local).AddTicks(9764) },
                    { 72, "Marie", "Grimes", new DateTime(2018, 3, 1, 6, 21, 57, 906, DateTimeKind.Local).AddTicks(1411) },
                    { 73, "Brenda", "VonRueden", new DateTime(2024, 2, 20, 17, 59, 54, 368, DateTimeKind.Local).AddTicks(4234) },
                    { 74, "Estell", "Lakin", new DateTime(2021, 4, 20, 13, 7, 15, 242, DateTimeKind.Local).AddTicks(9209) },
                    { 75, "Meghan", "Block", new DateTime(2016, 3, 12, 23, 53, 39, 753, DateTimeKind.Local).AddTicks(315) },
                    { 76, "Hermann", "Lehner", new DateTime(2016, 6, 19, 4, 11, 57, 763, DateTimeKind.Local).AddTicks(8452) },
                    { 77, "Rafaela", "Romaguera", new DateTime(2023, 10, 2, 1, 25, 27, 718, DateTimeKind.Local).AddTicks(642) },
                    { 78, "Axel", "Rempel", new DateTime(2016, 1, 31, 8, 7, 50, 191, DateTimeKind.Local).AddTicks(518) }
                });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "AuthorId", "FirstName", "LastName", "LastUpdated" },
                values: new object[,]
                {
                    { 79, "Bennie", "Herzog", new DateTime(2018, 11, 17, 23, 53, 12, 730, DateTimeKind.Local).AddTicks(983) },
                    { 80, "Reid", "Hoppe", new DateTime(2023, 8, 3, 23, 29, 23, 30, DateTimeKind.Local).AddTicks(5513) },
                    { 81, "Gerard", "Rau", new DateTime(2019, 3, 29, 17, 59, 2, 205, DateTimeKind.Local).AddTicks(5605) },
                    { 82, "Joelle", "Bernier", new DateTime(2022, 10, 18, 0, 34, 24, 62, DateTimeKind.Local).AddTicks(5953) },
                    { 83, "Oliver", "Altenwerth", new DateTime(2016, 4, 27, 14, 47, 0, 228, DateTimeKind.Local).AddTicks(5229) },
                    { 84, "Cristian", "Medhurst", new DateTime(2019, 1, 15, 23, 10, 26, 917, DateTimeKind.Local).AddTicks(9740) },
                    { 85, "Easter", "Dach", new DateTime(2019, 8, 18, 20, 51, 9, 930, DateTimeKind.Local).AddTicks(7107) },
                    { 86, "Myrtis", "Gerhold", new DateTime(2022, 5, 15, 16, 14, 2, 447, DateTimeKind.Local).AddTicks(8180) },
                    { 87, "Sid", "Kemmer", new DateTime(2019, 2, 21, 23, 15, 6, 769, DateTimeKind.Local).AddTicks(4888) },
                    { 88, "Delphine", "Carroll", new DateTime(2021, 12, 21, 12, 6, 35, 896, DateTimeKind.Local).AddTicks(1687) },
                    { 89, "Alysha", "Bradtke", new DateTime(2021, 12, 22, 17, 26, 14, 316, DateTimeKind.Local).AddTicks(5095) },
                    { 90, "Alvera", "Stoltenberg", new DateTime(2023, 3, 1, 6, 44, 26, 194, DateTimeKind.Local).AddTicks(3041) },
                    { 91, "Eldon", "Mohr", new DateTime(2020, 9, 12, 3, 8, 23, 388, DateTimeKind.Local).AddTicks(8548) },
                    { 92, "Jamie", "Sipes", new DateTime(2018, 1, 23, 8, 20, 49, 473, DateTimeKind.Local).AddTicks(5412) },
                    { 93, "Pansy", "Lehner", new DateTime(2016, 11, 18, 7, 32, 46, 817, DateTimeKind.Local).AddTicks(8698) },
                    { 94, "Louvenia", "Oberbrunner", new DateTime(2023, 10, 27, 1, 37, 11, 784, DateTimeKind.Local).AddTicks(8641) },
                    { 95, "Loren", "Parker", new DateTime(2016, 4, 4, 19, 50, 39, 133, DateTimeKind.Local).AddTicks(1769) },
                    { 96, "Kenyon", "Mueller", new DateTime(2023, 8, 1, 13, 49, 40, 95, DateTimeKind.Local).AddTicks(5305) },
                    { 97, "Rafaela", "Leannon", new DateTime(2017, 3, 1, 18, 56, 4, 699, DateTimeKind.Local).AddTicks(4106) },
                    { 98, "Loren", "Jast", new DateTime(2018, 1, 28, 22, 16, 4, 826, DateTimeKind.Local).AddTicks(8998) },
                    { 99, "Arnold", "Kuvalis", new DateTime(2020, 2, 7, 4, 57, 14, 122, DateTimeKind.Local).AddTicks(6551) },
                    { 100, "Leilani", "Reynolds", new DateTime(2016, 5, 2, 12, 29, 47, 271, DateTimeKind.Local).AddTicks(5116) }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 1, 29, 83.46280144933275m, new DateTime(2021, 8, 15, 7, 30, 27, 962, DateTimeKind.Local).AddTicks(4878), "e-enable user-centric systems" },
                    { 2, 67, 19.956326066244660m, new DateTime(2020, 5, 13, 14, 0, 57, 272, DateTimeKind.Local).AddTicks(7111), "syndicate magnetic supply-chains" },
                    { 3, 13, 84.621473916547020m, new DateTime(2020, 9, 29, 18, 48, 50, 985, DateTimeKind.Local).AddTicks(9570), "evolve ubiquitous architectures" },
                    { 4, 14, 96.974767863602520m, new DateTime(2021, 6, 21, 14, 37, 34, 196, DateTimeKind.Local).AddTicks(5781), "streamline collaborative partnerships" },
                    { 5, 17, 6.749839235741470m, new DateTime(2021, 6, 28, 1, 28, 26, 960, DateTimeKind.Local).AddTicks(4882), "mesh cross-platform solutions" },
                    { 6, 85, 78.247879414160870m, new DateTime(2014, 12, 31, 16, 27, 25, 80, DateTimeKind.Local).AddTicks(9425), "optimize killer deliverables" },
                    { 7, 47, 15.475104314926430m, new DateTime(2017, 3, 1, 13, 11, 43, 575, DateTimeKind.Local).AddTicks(2366), "grow open-source synergies" },
                    { 8, 16, 43.632423815184805m, new DateTime(2023, 12, 30, 18, 12, 15, 690, DateTimeKind.Local).AddTicks(7859), "matrix dynamic synergies" },
                    { 9, 7, 27.422048017475360m, new DateTime(2021, 1, 23, 20, 43, 10, 300, DateTimeKind.Local).AddTicks(58), "facilitate back-end platforms" },
                    { 10, 22, 50.178769531709090m, new DateTime(2020, 5, 10, 18, 15, 41, 683, DateTimeKind.Local).AddTicks(9388), "deploy leading-edge e-business" },
                    { 11, 2, 88.170179021267495m, new DateTime(2020, 3, 18, 14, 18, 3, 497, DateTimeKind.Local).AddTicks(3112), "visualize viral deliverables" },
                    { 12, 70, 14.950239312562175m, new DateTime(2021, 8, 6, 17, 17, 57, 964, DateTimeKind.Local).AddTicks(9230), "iterate transparent deliverables" },
                    { 13, 95, 50.578931215557130m, new DateTime(2018, 10, 6, 17, 59, 20, 786, DateTimeKind.Local).AddTicks(6996), "target mission-critical channels" },
                    { 14, 96, 40.949226816747405m, new DateTime(2021, 8, 4, 10, 1, 59, 39, DateTimeKind.Local).AddTicks(5731), "repurpose dot-com applications" },
                    { 15, 3, 10.9650624071852405m, new DateTime(2020, 6, 23, 9, 52, 3, 854, DateTimeKind.Local).AddTicks(1075), "empower bleeding-edge ROI" },
                    { 16, 19, 24.056536519348690m, new DateTime(2018, 11, 16, 3, 32, 45, 640, DateTimeKind.Local).AddTicks(849), "unleash e-business synergies" },
                    { 17, 29, 16.637152898382580m, new DateTime(2022, 1, 7, 6, 20, 55, 472, DateTimeKind.Local).AddTicks(405), "envisioneer seamless functionalities" },
                    { 18, 67, 23.176523388550705m, new DateTime(2023, 7, 11, 19, 38, 45, 28, DateTimeKind.Local).AddTicks(7024), "disintermediate global channels" },
                    { 19, 16, 50.848432600294405m, new DateTime(2018, 4, 15, 14, 10, 46, 764, DateTimeKind.Local).AddTicks(8323), "disintermediate dot-com infomediaries" },
                    { 20, 85, 19.325226137841965m, new DateTime(2019, 6, 28, 23, 53, 30, 12, DateTimeKind.Local).AddTicks(1017), "unleash enterprise initiatives" },
                    { 21, 8, 24.019296275606810m, new DateTime(2020, 5, 17, 4, 3, 51, 236, DateTimeKind.Local).AddTicks(2259), "expedite extensible supply-chains" },
                    { 22, 40, 84.219494164603860m, new DateTime(2018, 8, 14, 5, 59, 43, 843, DateTimeKind.Local).AddTicks(8748), "reinvent plug-and-play communities" },
                    { 23, 17, 13.0858179788205645m, new DateTime(2016, 7, 5, 7, 51, 29, 818, DateTimeKind.Local).AddTicks(922), "expedite viral supply-chains" },
                    { 24, 32, 5.29791335721562240m, new DateTime(2015, 9, 19, 15, 56, 45, 617, DateTimeKind.Local).AddTicks(1161), "aggregate distributed markets" },
                    { 25, 87, 53.937127678398425m, new DateTime(2016, 12, 4, 12, 42, 38, 430, DateTimeKind.Local).AddTicks(1364), "transition strategic e-markets" },
                    { 26, 18, 7.5304062087073195m, new DateTime(2018, 4, 18, 0, 51, 47, 186, DateTimeKind.Local).AddTicks(9201), "target viral systems" },
                    { 27, 31, 15.836246651772195m, new DateTime(2017, 5, 11, 4, 30, 21, 638, DateTimeKind.Local).AddTicks(8078), "unleash virtual experiences" },
                    { 28, 28, 42.676564316878030m, new DateTime(2017, 7, 11, 3, 57, 33, 640, DateTimeKind.Local).AddTicks(4572), "empower frictionless systems" },
                    { 29, 12, 86.285175512618520m, new DateTime(2019, 12, 1, 11, 18, 25, 935, DateTimeKind.Local).AddTicks(144), "engage plug-and-play technologies" },
                    { 30, 68, 35.315424536387720m, new DateTime(2014, 4, 24, 3, 33, 24, 411, DateTimeKind.Local).AddTicks(924), "reintermediate compelling web services" },
                    { 31, 84, 47.147313925381560m, new DateTime(2016, 9, 9, 22, 39, 59, 862, DateTimeKind.Local).AddTicks(7575), "cultivate B2B initiatives" },
                    { 32, 62, 90.049909319687635m, new DateTime(2018, 10, 1, 5, 55, 23, 325, DateTimeKind.Local).AddTicks(6302), "deploy distributed e-business" },
                    { 33, 58, 93.589674440094120m, new DateTime(2018, 6, 23, 14, 9, 19, 549, DateTimeKind.Local).AddTicks(688), "facilitate cutting-edge systems" },
                    { 34, 90, 95.538499179040480m, new DateTime(2022, 11, 19, 4, 9, 56, 968, DateTimeKind.Local).AddTicks(4209), "grow leading-edge e-services" },
                    { 35, 30, 20.023040079212355m, new DateTime(2019, 12, 25, 15, 30, 33, 895, DateTimeKind.Local).AddTicks(6470), "aggregate innovative functionalities" },
                    { 36, 97, 58.498118078950955m, new DateTime(2016, 12, 19, 5, 15, 3, 231, DateTimeKind.Local).AddTicks(4689), "reintermediate world-class networks" },
                    { 37, 68, 42.880807366424855m, new DateTime(2021, 7, 2, 3, 51, 5, 54, DateTimeKind.Local).AddTicks(3936), "transition dot-com eyeballs" },
                    { 38, 13, 43.416296343505585m, new DateTime(2015, 4, 9, 11, 2, 11, 575, DateTimeKind.Local).AddTicks(6551), "engage next-generation schemas" },
                    { 39, 81, 29.488724975923395m, new DateTime(2017, 3, 22, 0, 26, 28, 251, DateTimeKind.Local).AddTicks(6390), "transform robust convergence" },
                    { 40, 64, 53.201651542341890m, new DateTime(2020, 9, 10, 13, 8, 11, 590, DateTimeKind.Local).AddTicks(3560), "brand dynamic communities" },
                    { 41, 31, 70.11047073043575m, new DateTime(2017, 1, 1, 5, 47, 20, 959, DateTimeKind.Local).AddTicks(978), "synergize virtual interfaces" },
                    { 42, 30, 88.90711513416620m, new DateTime(2024, 2, 20, 12, 17, 38, 943, DateTimeKind.Local).AddTicks(7959), "scale global schemas" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 43, 63, 7.898281034195955m, new DateTime(2017, 10, 4, 3, 48, 58, 553, DateTimeKind.Local).AddTicks(1919), "matrix mission-critical e-markets" },
                    { 44, 72, 60.757922323747830m, new DateTime(2021, 6, 23, 10, 5, 21, 546, DateTimeKind.Local).AddTicks(6321), "synergize virtual web services" },
                    { 45, 90, 93.433998079956730m, new DateTime(2018, 4, 6, 8, 48, 26, 443, DateTimeKind.Local).AddTicks(5160), "strategize open-source users" },
                    { 46, 38, 79.474658467700425m, new DateTime(2017, 9, 8, 3, 43, 25, 881, DateTimeKind.Local).AddTicks(6431), "leverage seamless content" },
                    { 47, 36, 45.29964627291505m, new DateTime(2017, 7, 19, 14, 15, 8, 94, DateTimeKind.Local).AddTicks(8184), "scale proactive channels" },
                    { 48, 46, 43.782525978950785m, new DateTime(2016, 9, 28, 6, 23, 27, 449, DateTimeKind.Local).AddTicks(6170), "enhance granular e-tailers" },
                    { 49, 36, 91.135901668713635m, new DateTime(2014, 9, 21, 13, 49, 10, 151, DateTimeKind.Local).AddTicks(2272), "transform strategic content" },
                    { 50, 83, 66.151133775037335m, new DateTime(2018, 11, 14, 7, 54, 17, 628, DateTimeKind.Local).AddTicks(1098), "target extensible convergence" },
                    { 51, 59, 38.223991538055055m, new DateTime(2019, 9, 16, 2, 25, 22, 151, DateTimeKind.Local).AddTicks(8049), "reinvent frictionless channels" },
                    { 52, 62, 87.533384705074825m, new DateTime(2015, 4, 11, 7, 23, 5, 524, DateTimeKind.Local).AddTicks(3114), "harness scalable portals" },
                    { 53, 12, 32.610721134389410m, new DateTime(2019, 2, 24, 17, 42, 35, 487, DateTimeKind.Local).AddTicks(4279), "revolutionize sticky e-markets" },
                    { 54, 100, 43.740128908451790m, new DateTime(2023, 5, 10, 8, 31, 21, 560, DateTimeKind.Local).AddTicks(5150), "benchmark dot-com niches" },
                    { 55, 86, 55.358856768777090m, new DateTime(2017, 10, 17, 1, 55, 41, 207, DateTimeKind.Local).AddTicks(8365), "monetize ubiquitous infomediaries" },
                    { 56, 100, 70.016231981931265m, new DateTime(2019, 10, 21, 3, 38, 46, 178, DateTimeKind.Local).AddTicks(4839), "extend leading-edge platforms" },
                    { 57, 6, 51.549895796939410m, new DateTime(2021, 2, 3, 7, 40, 20, 759, DateTimeKind.Local).AddTicks(431), "empower B2B vortals" },
                    { 58, 41, 70.509095763357910m, new DateTime(2021, 11, 4, 18, 55, 47, 71, DateTimeKind.Local).AddTicks(4084), "envisioneer turn-key e-markets" },
                    { 59, 21, 78.28413361946085m, new DateTime(2019, 1, 3, 13, 51, 59, 932, DateTimeKind.Local).AddTicks(2637), "target out-of-the-box networks" },
                    { 60, 33, 60.169757465766920m, new DateTime(2020, 3, 25, 21, 26, 54, 607, DateTimeKind.Local).AddTicks(5039), "iterate revolutionary solutions" },
                    { 61, 75, 69.138452416257415m, new DateTime(2019, 5, 31, 12, 14, 59, 238, DateTimeKind.Local).AddTicks(354), "expedite 24/7 schemas" },
                    { 62, 51, 93.114688383852310m, new DateTime(2014, 9, 7, 11, 7, 23, 130, DateTimeKind.Local).AddTicks(7798), "scale synergistic methodologies" },
                    { 63, 82, 22.072181148309190m, new DateTime(2024, 2, 1, 14, 39, 22, 40, DateTimeKind.Local).AddTicks(3462), "utilize transparent vortals" },
                    { 64, 69, 57.57374262232070m, new DateTime(2014, 12, 2, 16, 10, 2, 107, DateTimeKind.Local).AddTicks(2475), "engage B2C markets" },
                    { 65, 65, 47.756064947624965m, new DateTime(2023, 3, 24, 14, 29, 14, 117, DateTimeKind.Local).AddTicks(8116), "reintermediate e-business platforms" },
                    { 66, 70, 50.198710549739435m, new DateTime(2016, 1, 10, 8, 41, 40, 300, DateTimeKind.Local).AddTicks(3126), "target bricks-and-clicks mindshare" },
                    { 67, 70, 23.162444046691685m, new DateTime(2023, 3, 2, 18, 54, 17, 292, DateTimeKind.Local).AddTicks(1937), "revolutionize bricks-and-clicks e-markets" },
                    { 68, 45, 66.884621201736040m, new DateTime(2016, 2, 17, 16, 44, 34, 402, DateTimeKind.Local).AddTicks(3591), "scale 24/7 e-commerce" },
                    { 69, 19, 12.1828773710522570m, new DateTime(2015, 1, 18, 15, 49, 28, 34, DateTimeKind.Local).AddTicks(9533), "e-enable B2C content" },
                    { 70, 6, 23.02370163065060m, new DateTime(2021, 1, 15, 21, 37, 29, 115, DateTimeKind.Local).AddTicks(6642), "aggregate cross-platform experiences" },
                    { 71, 10, 86.265226221600575m, new DateTime(2015, 11, 16, 21, 30, 28, 626, DateTimeKind.Local).AddTicks(1709), "reintermediate magnetic vortals" },
                    { 72, 100, 36.988777750142835m, new DateTime(2023, 3, 14, 1, 14, 34, 29, DateTimeKind.Local).AddTicks(7098), "deliver 24/365 schemas" },
                    { 73, 84, 8.6486389828610525m, new DateTime(2017, 6, 25, 23, 30, 4, 501, DateTimeKind.Local).AddTicks(8826), "innovate impactful content" },
                    { 74, 48, 23.752918649788860m, new DateTime(2022, 5, 20, 10, 23, 49, 779, DateTimeKind.Local).AddTicks(4636), "innovate strategic applications" },
                    { 75, 87, 95.037385357020540m, new DateTime(2022, 11, 12, 2, 21, 15, 621, DateTimeKind.Local).AddTicks(4695), "whiteboard end-to-end e-markets" },
                    { 76, 71, 18.562107749007875m, new DateTime(2022, 2, 20, 19, 8, 53, 193, DateTimeKind.Local).AddTicks(6776), "expedite back-end e-commerce" },
                    { 77, 26, 47.497823522097970m, new DateTime(2014, 12, 1, 6, 12, 40, 758, DateTimeKind.Local).AddTicks(4382), "visualize cutting-edge content" },
                    { 78, 88, 47.995260205633930m, new DateTime(2019, 4, 19, 4, 34, 18, 895, DateTimeKind.Local).AddTicks(4298), "engineer next-generation eyeballs" },
                    { 79, 27, 24.470929282470430m, new DateTime(2022, 7, 21, 7, 28, 53, 600, DateTimeKind.Local).AddTicks(425), "envisioneer cross-media methodologies" },
                    { 80, 57, 55.750595891104920m, new DateTime(2020, 7, 4, 5, 18, 20, 151, DateTimeKind.Local).AddTicks(8916), "harness seamless networks" },
                    { 81, 6, 7.1545663224266885m, new DateTime(2016, 3, 2, 1, 16, 58, 299, DateTimeKind.Local).AddTicks(8619), "benchmark sticky e-tailers" },
                    { 82, 10, 40.461782282398455m, new DateTime(2017, 12, 18, 9, 22, 11, 583, DateTimeKind.Local).AddTicks(1438), "seize turn-key schemas" },
                    { 83, 18, 29.749257811859730m, new DateTime(2018, 9, 14, 10, 27, 45, 147, DateTimeKind.Local).AddTicks(4872), "maximize bricks-and-clicks e-services" },
                    { 84, 64, 66.110019847911685m, new DateTime(2018, 2, 22, 15, 16, 15, 46, DateTimeKind.Local).AddTicks(2866), "architect frictionless synergies" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 85, 6, 84.777336299291480m, new DateTime(2023, 4, 29, 11, 24, 32, 467, DateTimeKind.Local).AddTicks(8025), "deliver user-centric e-commerce" },
                    { 86, 85, 97.866006645652880m, new DateTime(2015, 2, 11, 9, 36, 1, 950, DateTimeKind.Local).AddTicks(7986), "evolve 24/7 metrics" },
                    { 87, 45, 39.727167065831345m, new DateTime(2018, 10, 10, 23, 43, 41, 288, DateTimeKind.Local).AddTicks(2529), "extend granular content" },
                    { 88, 10, 50.990658333678360m, new DateTime(2022, 7, 28, 19, 59, 12, 287, DateTimeKind.Local).AddTicks(8360), "seize viral initiatives" },
                    { 89, 81, 45.826782491217355m, new DateTime(2017, 7, 7, 21, 43, 32, 3, DateTimeKind.Local).AddTicks(211), "innovate robust partnerships" },
                    { 90, 45, 19.155099379918095m, new DateTime(2022, 11, 15, 15, 44, 37, 562, DateTimeKind.Local).AddTicks(9411), "morph sticky eyeballs" },
                    { 91, 5, 30.219765922825080m, new DateTime(2016, 3, 5, 6, 27, 59, 420, DateTimeKind.Local).AddTicks(2914), "revolutionize cross-media e-commerce" },
                    { 92, 96, 27.758926817162245m, new DateTime(2023, 6, 10, 11, 13, 33, 134, DateTimeKind.Local).AddTicks(5049), "monetize granular systems" },
                    { 93, 93, 86.823115869469540m, new DateTime(2024, 1, 9, 15, 33, 3, 495, DateTimeKind.Local).AddTicks(7111), "integrate frictionless content" },
                    { 94, 17, 56.912709994662670m, new DateTime(2014, 9, 1, 19, 58, 44, 555, DateTimeKind.Local).AddTicks(1658), "incentivize collaborative experiences" },
                    { 95, 79, 65.518659845584675m, new DateTime(2015, 4, 26, 2, 58, 20, 635, DateTimeKind.Local).AddTicks(8776), "implement extensible infomediaries" },
                    { 96, 65, 95.78520122368585m, new DateTime(2018, 5, 2, 17, 38, 34, 714, DateTimeKind.Local).AddTicks(7723), "envisioneer distributed blockchains" },
                    { 97, 47, 62.024715133769990m, new DateTime(2021, 1, 1, 5, 57, 19, 46, DateTimeKind.Local).AddTicks(6763), "incubate customized experiences" },
                    { 98, 27, 51.802717566817745m, new DateTime(2019, 6, 24, 5, 14, 40, 70, DateTimeKind.Local).AddTicks(1630), "reintermediate synergistic solutions" },
                    { 99, 99, 16.303298048126590m, new DateTime(2023, 10, 22, 13, 2, 26, 467, DateTimeKind.Local).AddTicks(713), "envisioneer user-centric applications" },
                    { 100, 57, 34.365997475977375m, new DateTime(2018, 10, 12, 5, 4, 33, 45, DateTimeKind.Local).AddTicks(2096), "leverage frictionless web services" },
                    { 101, 99, 78.144588483227820m, new DateTime(2021, 1, 9, 14, 30, 54, 629, DateTimeKind.Local).AddTicks(2363), "generate intuitive models" },
                    { 102, 41, 7.1994337616348765m, new DateTime(2014, 10, 6, 14, 4, 37, 671, DateTimeKind.Local).AddTicks(2310), "leverage sexy infomediaries" },
                    { 103, 72, 61.45731052599880m, new DateTime(2014, 4, 17, 16, 51, 53, 42, DateTimeKind.Local).AddTicks(6564), "matrix web-enabled ROI" },
                    { 104, 91, 84.270254183309580m, new DateTime(2018, 7, 11, 9, 17, 51, 414, DateTimeKind.Local).AddTicks(9764), "embrace innovative relationships" },
                    { 105, 27, 12.8606953528142830m, new DateTime(2015, 11, 16, 11, 54, 1, 33, DateTimeKind.Local).AddTicks(9973), "leverage intuitive users" },
                    { 106, 87, 65.40781796994460m, new DateTime(2017, 11, 19, 3, 10, 43, 208, DateTimeKind.Local).AddTicks(3104), "disintermediate compelling e-services" },
                    { 107, 25, 19.42188750356885m, new DateTime(2020, 10, 30, 21, 47, 23, 298, DateTimeKind.Local).AddTicks(5827), "engage granular functionalities" },
                    { 108, 71, 92.526968179413590m, new DateTime(2019, 7, 2, 20, 56, 50, 918, DateTimeKind.Local).AddTicks(4964), "implement transparent channels" },
                    { 109, 83, 50.689471155491630m, new DateTime(2018, 12, 2, 3, 46, 4, 784, DateTimeKind.Local).AddTicks(3319), "monetize world-class functionalities" },
                    { 110, 36, 80.662503680656855m, new DateTime(2019, 8, 29, 12, 42, 54, 714, DateTimeKind.Local).AddTicks(8110), "strategize scalable interfaces" },
                    { 111, 91, 50.876984073510470m, new DateTime(2022, 12, 1, 2, 50, 5, 880, DateTimeKind.Local).AddTicks(3470), "e-enable compelling bandwidth" },
                    { 112, 49, 59.413786858907720m, new DateTime(2017, 5, 31, 17, 48, 3, 585, DateTimeKind.Local).AddTicks(2574), "whiteboard bleeding-edge synergies" },
                    { 113, 52, 66.724179111400230m, new DateTime(2019, 3, 5, 8, 55, 10, 720, DateTimeKind.Local).AddTicks(1088), "leverage holistic supply-chains" },
                    { 114, 14, 48.692100419525780m, new DateTime(2024, 1, 20, 23, 19, 43, 485, DateTimeKind.Local).AddTicks(6076), "recontextualize bleeding-edge networks" },
                    { 115, 21, 82.409158984206730m, new DateTime(2015, 12, 5, 18, 30, 59, 878, DateTimeKind.Local).AddTicks(2386), "seize next-generation supply-chains" },
                    { 116, 100, 47.148189930612490m, new DateTime(2021, 8, 15, 8, 25, 58, 272, DateTimeKind.Local).AddTicks(8763), "optimize scalable e-markets" },
                    { 117, 12, 37.454427482793890m, new DateTime(2016, 3, 18, 17, 11, 12, 465, DateTimeKind.Local).AddTicks(1703), "empower collaborative channels" },
                    { 118, 2, 43.350925642415740m, new DateTime(2019, 12, 8, 19, 19, 21, 168, DateTimeKind.Local).AddTicks(7212), "expedite strategic synergies" },
                    { 119, 80, 16.231940808784870m, new DateTime(2023, 4, 24, 7, 34, 53, 396, DateTimeKind.Local).AddTicks(3553), "evolve interactive e-tailers" },
                    { 120, 22, 6.2556376099425345m, new DateTime(2018, 7, 5, 6, 11, 25, 607, DateTimeKind.Local).AddTicks(2486), "benchmark proactive infrastructures" },
                    { 121, 76, 15.786806759613115m, new DateTime(2019, 3, 8, 18, 17, 43, 631, DateTimeKind.Local).AddTicks(9590), "monetize best-of-breed applications" },
                    { 122, 16, 24.561148651373335m, new DateTime(2019, 5, 2, 15, 57, 23, 359, DateTimeKind.Local).AddTicks(139), "productize web-enabled ROI" },
                    { 123, 13, 5.61310810203706405m, new DateTime(2015, 11, 17, 4, 18, 56, 439, DateTimeKind.Local).AddTicks(4749), "e-enable cutting-edge technologies" },
                    { 124, 20, 83.593638876532515m, new DateTime(2017, 10, 6, 9, 40, 30, 962, DateTimeKind.Local).AddTicks(7791), "visualize value-added bandwidth" },
                    { 125, 17, 9.8332914622822405m, new DateTime(2015, 4, 16, 22, 30, 11, 799, DateTimeKind.Local).AddTicks(6560), "reintermediate open-source e-markets" },
                    { 126, 31, 69.392831902826085m, new DateTime(2016, 5, 11, 10, 18, 13, 120, DateTimeKind.Local).AddTicks(651), "harness innovative communities" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 127, 97, 52.024644020699555m, new DateTime(2019, 12, 7, 2, 26, 7, 339, DateTimeKind.Local).AddTicks(8138), "recontextualize interactive applications" },
                    { 128, 40, 32.279697354692675m, new DateTime(2014, 4, 3, 4, 42, 12, 619, DateTimeKind.Local).AddTicks(445), "architect e-business niches" },
                    { 129, 67, 43.519987178099060m, new DateTime(2017, 6, 7, 13, 51, 18, 888, DateTimeKind.Local).AddTicks(2781), "e-enable transparent niches" },
                    { 130, 4, 69.841381377858515m, new DateTime(2016, 8, 26, 2, 1, 2, 749, DateTimeKind.Local).AddTicks(740), "extend visionary schemas" },
                    { 131, 24, 13.4259346447744185m, new DateTime(2021, 4, 21, 5, 9, 25, 600, DateTimeKind.Local).AddTicks(5138), "e-enable leading-edge applications" },
                    { 132, 43, 20.2945044410880m, new DateTime(2022, 6, 26, 5, 10, 50, 466, DateTimeKind.Local).AddTicks(9224), "morph mission-critical deliverables" },
                    { 133, 86, 72.539457559378720m, new DateTime(2014, 7, 14, 2, 25, 45, 545, DateTimeKind.Local).AddTicks(5747), "transform granular bandwidth" },
                    { 134, 93, 71.511978403352395m, new DateTime(2017, 12, 1, 12, 47, 5, 265, DateTimeKind.Local).AddTicks(2306), "embrace revolutionary infrastructures" },
                    { 135, 76, 88.284151236713160m, new DateTime(2022, 12, 30, 23, 8, 55, 765, DateTimeKind.Local).AddTicks(3059), "enhance integrated infomediaries" },
                    { 136, 47, 63.223310055230430m, new DateTime(2022, 4, 9, 15, 15, 7, 312, DateTimeKind.Local).AddTicks(747), "synthesize next-generation web-readiness" },
                    { 137, 25, 81.93873998584685m, new DateTime(2023, 1, 10, 11, 36, 18, 594, DateTimeKind.Local).AddTicks(2502), "matrix sexy eyeballs" },
                    { 138, 57, 76.172919325452845m, new DateTime(2015, 10, 8, 1, 39, 1, 267, DateTimeKind.Local).AddTicks(394), "benchmark cross-media platforms" },
                    { 139, 62, 14.1251264814238770m, new DateTime(2019, 1, 29, 16, 56, 39, 498, DateTimeKind.Local).AddTicks(2548), "expedite cross-platform niches" },
                    { 140, 84, 22.940367796800755m, new DateTime(2015, 3, 28, 1, 40, 12, 314, DateTimeKind.Local).AddTicks(5705), "iterate viral action-items" },
                    { 141, 53, 70.455508726029610m, new DateTime(2022, 2, 10, 10, 6, 14, 560, DateTimeKind.Local).AddTicks(4013), "facilitate dot-com paradigms" },
                    { 142, 73, 47.795275412133045m, new DateTime(2016, 11, 21, 5, 22, 33, 469, DateTimeKind.Local).AddTicks(1922), "disintermediate cross-media web-readiness" },
                    { 143, 38, 5.47962410667474510m, new DateTime(2018, 5, 7, 12, 13, 55, 606, DateTimeKind.Local).AddTicks(5357), "monetize bricks-and-clicks communities" },
                    { 144, 63, 71.561614903026145m, new DateTime(2014, 10, 19, 11, 34, 3, 994, DateTimeKind.Local).AddTicks(5459), "deploy magnetic supply-chains" },
                    { 145, 41, 67.391965507273165m, new DateTime(2017, 4, 3, 3, 6, 16, 783, DateTimeKind.Local).AddTicks(4178), "aggregate next-generation technologies" },
                    { 146, 30, 43.176011568894385m, new DateTime(2021, 3, 13, 8, 57, 3, 464, DateTimeKind.Local).AddTicks(9477), "aggregate innovative communities" },
                    { 147, 38, 19.377667217934395m, new DateTime(2021, 9, 2, 9, 27, 28, 903, DateTimeKind.Local).AddTicks(890), "unleash cutting-edge markets" },
                    { 148, 13, 62.535917805505060m, new DateTime(2018, 2, 22, 3, 31, 29, 706, DateTimeKind.Local).AddTicks(1311), "implement collaborative deliverables" },
                    { 149, 61, 90.43036841596345m, new DateTime(2018, 6, 3, 2, 35, 49, 344, DateTimeKind.Local).AddTicks(6476), "visualize bleeding-edge infomediaries" },
                    { 150, 33, 90.809797707777875m, new DateTime(2017, 3, 28, 10, 7, 32, 734, DateTimeKind.Local).AddTicks(2369), "incentivize granular supply-chains" },
                    { 151, 11, 10.3995567975761320m, new DateTime(2018, 6, 26, 3, 54, 46, 348, DateTimeKind.Local).AddTicks(5920), "whiteboard 24/7 functionalities" },
                    { 152, 22, 24.500535257142180m, new DateTime(2019, 3, 6, 5, 50, 29, 614, DateTimeKind.Local).AddTicks(2262), "unleash bleeding-edge solutions" },
                    { 153, 31, 29.52435533087570m, new DateTime(2023, 6, 30, 9, 17, 51, 564, DateTimeKind.Local).AddTicks(1295), "innovate dynamic channels" },
                    { 154, 14, 34.591050490090820m, new DateTime(2015, 4, 22, 12, 54, 41, 619, DateTimeKind.Local).AddTicks(9459), "syndicate user-centric web services" },
                    { 155, 76, 32.631003013186975m, new DateTime(2019, 6, 22, 10, 9, 28, 775, DateTimeKind.Local).AddTicks(3005), "integrate dynamic applications" },
                    { 156, 44, 39.14075941444360m, new DateTime(2014, 12, 29, 23, 21, 50, 249, DateTimeKind.Local).AddTicks(1436), "disintermediate clicks-and-mortar relationships" },
                    { 157, 62, 10.5294018174107820m, new DateTime(2017, 9, 4, 15, 35, 2, 494, DateTimeKind.Local).AddTicks(9542), "seize scalable technologies" },
                    { 158, 32, 91.025800338694830m, new DateTime(2020, 2, 8, 13, 11, 48, 764, DateTimeKind.Local).AddTicks(1159), "target intuitive relationships" },
                    { 159, 18, 83.681114586368030m, new DateTime(2020, 5, 5, 0, 18, 40, 1, DateTimeKind.Local).AddTicks(1945), "recontextualize strategic initiatives" },
                    { 160, 36, 42.792785224226960m, new DateTime(2021, 10, 2, 13, 40, 12, 639, DateTimeKind.Local).AddTicks(2817), "disintermediate viral systems" },
                    { 161, 42, 9.864189976499090m, new DateTime(2024, 3, 11, 23, 55, 9, 268, DateTimeKind.Local).AddTicks(6735), "engineer global users" },
                    { 162, 88, 40.300318617523740m, new DateTime(2018, 12, 31, 20, 19, 57, 55, DateTimeKind.Local).AddTicks(9017), "drive web-enabled networks" },
                    { 163, 32, 46.740601778509035m, new DateTime(2014, 6, 11, 0, 53, 51, 705, DateTimeKind.Local).AddTicks(5932), "synthesize frictionless technologies" },
                    { 164, 5, 66.432379905677980m, new DateTime(2016, 7, 16, 0, 52, 32, 243, DateTimeKind.Local).AddTicks(5270), "transform next-generation blockchains" },
                    { 165, 25, 20.785361865625835m, new DateTime(2021, 11, 28, 19, 12, 20, 731, DateTimeKind.Local).AddTicks(4096), "repurpose cross-platform portals" },
                    { 166, 72, 11.8694783760312320m, new DateTime(2020, 1, 7, 22, 43, 30, 332, DateTimeKind.Local).AddTicks(5552), "architect dot-com channels" },
                    { 167, 20, 69.886284980955020m, new DateTime(2016, 6, 20, 15, 52, 20, 212, DateTimeKind.Local).AddTicks(5027), "recontextualize enterprise systems" },
                    { 168, 71, 15.698188500864805m, new DateTime(2016, 5, 19, 11, 35, 19, 748, DateTimeKind.Local).AddTicks(6426), "innovate bricks-and-clicks action-items" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 169, 66, 97.966833698548475m, new DateTime(2018, 4, 25, 2, 33, 43, 909, DateTimeKind.Local).AddTicks(4585), "transform distributed vortals" },
                    { 170, 79, 55.720795094834045m, new DateTime(2021, 10, 6, 21, 9, 18, 491, DateTimeKind.Local).AddTicks(8893), "maximize bleeding-edge partnerships" },
                    { 171, 11, 27.139666472595770m, new DateTime(2017, 6, 16, 6, 1, 47, 676, DateTimeKind.Local).AddTicks(1052), "repurpose e-business networks" },
                    { 172, 22, 8.8278344288493885m, new DateTime(2015, 2, 24, 6, 57, 0, 730, DateTimeKind.Local).AddTicks(6342), "iterate efficient networks" },
                    { 173, 46, 50.965190173743040m, new DateTime(2016, 6, 4, 4, 19, 7, 360, DateTimeKind.Local).AddTicks(6480), "synergize bricks-and-clicks e-business" },
                    { 174, 13, 64.673595673044135m, new DateTime(2018, 7, 14, 17, 54, 4, 398, DateTimeKind.Local).AddTicks(9674), "aggregate 24/7 vortals" },
                    { 175, 40, 45.940556523969595m, new DateTime(2017, 3, 3, 2, 23, 42, 88, DateTimeKind.Local).AddTicks(9143), "disintermediate seamless markets" },
                    { 176, 77, 16.06706995817525m, new DateTime(2019, 7, 8, 10, 20, 19, 450, DateTimeKind.Local).AddTicks(1308), "reintermediate value-added metrics" },
                    { 177, 35, 63.976940741452760m, new DateTime(2019, 5, 11, 9, 27, 10, 902, DateTimeKind.Local).AddTicks(9112), "deliver rich e-commerce" },
                    { 178, 93, 64.016486722342795m, new DateTime(2023, 2, 28, 10, 30, 19, 453, DateTimeKind.Local).AddTicks(6949), "productize sexy infomediaries" },
                    { 179, 77, 68.320855277060880m, new DateTime(2018, 7, 31, 11, 21, 15, 247, DateTimeKind.Local).AddTicks(8344), "engage granular web-readiness" },
                    { 180, 42, 54.89283327940415m, new DateTime(2018, 7, 3, 19, 58, 15, 315, DateTimeKind.Local).AddTicks(8633), "deploy frictionless paradigms" },
                    { 181, 16, 11.3334094191993240m, new DateTime(2022, 11, 14, 11, 21, 26, 751, DateTimeKind.Local).AddTicks(3861), "transform efficient users" },
                    { 182, 100, 60.828783144221115m, new DateTime(2023, 10, 26, 19, 35, 33, 819, DateTimeKind.Local).AddTicks(8635), "recontextualize viral synergies" },
                    { 183, 87, 10.6615140290432180m, new DateTime(2016, 4, 23, 11, 3, 51, 576, DateTimeKind.Local).AddTicks(2460), "monetize e-business content" },
                    { 184, 96, 7.5429724948704590m, new DateTime(2019, 8, 11, 16, 53, 42, 875, DateTimeKind.Local).AddTicks(5917), "harness e-business e-markets" },
                    { 185, 28, 8.8405770727492545m, new DateTime(2022, 7, 14, 12, 47, 3, 349, DateTimeKind.Local).AddTicks(2100), "envisioneer efficient users" },
                    { 186, 76, 58.391322199996595m, new DateTime(2021, 3, 9, 17, 35, 26, 390, DateTimeKind.Local).AddTicks(3211), "facilitate rich niches" },
                    { 187, 48, 54.475861390747230m, new DateTime(2018, 11, 29, 17, 8, 30, 516, DateTimeKind.Local).AddTicks(5590), "architect virtual e-business" },
                    { 188, 87, 89.248440094089680m, new DateTime(2017, 8, 7, 5, 8, 48, 310, DateTimeKind.Local).AddTicks(8052), "enhance synergistic networks" },
                    { 189, 32, 82.14031784203865m, new DateTime(2022, 3, 4, 23, 13, 23, 618, DateTimeKind.Local).AddTicks(1777), "seize cross-media synergies" },
                    { 190, 64, 43.206085486635820m, new DateTime(2017, 5, 29, 14, 9, 18, 485, DateTimeKind.Local).AddTicks(1661), "incubate mission-critical technologies" },
                    { 191, 29, 24.667793915935755m, new DateTime(2015, 12, 28, 5, 41, 21, 66, DateTimeKind.Local).AddTicks(1548), "expedite mission-critical solutions" },
                    { 192, 64, 24.327188810440790m, new DateTime(2019, 5, 25, 18, 48, 8, 652, DateTimeKind.Local).AddTicks(7753), "cultivate e-business web-readiness" },
                    { 193, 14, 67.136647105396645m, new DateTime(2023, 12, 20, 14, 12, 15, 963, DateTimeKind.Local).AddTicks(1178), "scale one-to-one users" },
                    { 194, 92, 19.671734540894290m, new DateTime(2019, 7, 14, 5, 13, 20, 846, DateTimeKind.Local).AddTicks(7436), "strategize magnetic models" },
                    { 195, 16, 58.794288392040230m, new DateTime(2014, 10, 22, 4, 55, 10, 161, DateTimeKind.Local).AddTicks(231), "empower value-added content" },
                    { 196, 2, 22.906232749218740m, new DateTime(2015, 10, 8, 0, 34, 51, 658, DateTimeKind.Local).AddTicks(5977), "repurpose cutting-edge channels" },
                    { 197, 80, 11.6039712496076060m, new DateTime(2015, 5, 21, 12, 42, 26, 786, DateTimeKind.Local).AddTicks(6324), "mesh out-of-the-box deliverables" },
                    { 198, 32, 72.124127651048885m, new DateTime(2023, 7, 21, 0, 32, 1, 719, DateTimeKind.Local).AddTicks(1261), "integrate dot-com mindshare" },
                    { 199, 71, 12.0675138463847230m, new DateTime(2020, 6, 19, 23, 21, 41, 317, DateTimeKind.Local).AddTicks(3002), "productize B2B deliverables" },
                    { 200, 21, 42.912599698298430m, new DateTime(2016, 2, 24, 20, 7, 20, 570, DateTimeKind.Local).AddTicks(3436), "productize world-class networks" },
                    { 201, 63, 39.41682779880425m, new DateTime(2020, 5, 22, 10, 34, 27, 326, DateTimeKind.Local).AddTicks(6443), "engage customized e-services" },
                    { 202, 24, 95.804111984326440m, new DateTime(2023, 9, 4, 12, 9, 5, 662, DateTimeKind.Local).AddTicks(9817), "embrace revolutionary users" },
                    { 203, 46, 71.767793148516015m, new DateTime(2019, 6, 22, 10, 5, 27, 227, DateTimeKind.Local).AddTicks(5152), "optimize synergistic e-business" },
                    { 204, 65, 19.077585102678005m, new DateTime(2014, 6, 22, 3, 14, 4, 488, DateTimeKind.Local).AddTicks(5656), "expedite frictionless interfaces" },
                    { 205, 93, 48.074564865470165m, new DateTime(2019, 9, 14, 2, 47, 25, 201, DateTimeKind.Local).AddTicks(526), "productize web-enabled experiences" },
                    { 206, 16, 58.754947115414925m, new DateTime(2024, 1, 28, 2, 11, 54, 832, DateTimeKind.Local).AddTicks(2763), "benchmark magnetic relationships" },
                    { 207, 93, 60.928085681007090m, new DateTime(2015, 7, 13, 13, 4, 8, 427, DateTimeKind.Local).AddTicks(1381), "morph robust markets" },
                    { 208, 93, 54.571260890028375m, new DateTime(2021, 11, 9, 11, 44, 6, 364, DateTimeKind.Local).AddTicks(7412), "transition one-to-one channels" },
                    { 209, 66, 66.007550500346260m, new DateTime(2022, 8, 30, 8, 8, 52, 945, DateTimeKind.Local).AddTicks(2885), "innovate value-added eyeballs" },
                    { 210, 18, 12.1969538642625570m, new DateTime(2023, 11, 23, 5, 6, 46, 662, DateTimeKind.Local).AddTicks(8847), "maximize interactive deliverables" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 211, 81, 81.340528416812795m, new DateTime(2014, 4, 14, 12, 12, 12, 330, DateTimeKind.Local).AddTicks(1401), "drive transparent synergies" },
                    { 212, 62, 95.850578442571130m, new DateTime(2017, 11, 7, 12, 53, 15, 588, DateTimeKind.Local).AddTicks(9473), "drive sticky relationships" },
                    { 213, 84, 22.938706827741240m, new DateTime(2017, 2, 23, 12, 9, 24, 388, DateTimeKind.Local).AddTicks(3619), "deliver holistic initiatives" },
                    { 214, 50, 47.139200040760940m, new DateTime(2016, 1, 19, 2, 1, 24, 16, DateTimeKind.Local).AddTicks(2540), "synthesize front-end initiatives" },
                    { 215, 32, 84.698307619098370m, new DateTime(2018, 9, 13, 23, 55, 6, 620, DateTimeKind.Local).AddTicks(2073), "innovate magnetic infomediaries" },
                    { 216, 95, 8.504744489127625m, new DateTime(2022, 9, 20, 2, 22, 10, 568, DateTimeKind.Local).AddTicks(3524), "morph virtual markets" },
                    { 217, 46, 98.432575851749460m, new DateTime(2021, 3, 3, 15, 12, 51, 526, DateTimeKind.Local).AddTicks(112), "cultivate dot-com experiences" },
                    { 218, 6, 36.939889250414505m, new DateTime(2020, 2, 16, 13, 36, 21, 522, DateTimeKind.Local).AddTicks(1814), "incentivize granular supply-chains" },
                    { 219, 44, 28.607987046102220m, new DateTime(2021, 9, 4, 12, 42, 5, 194, DateTimeKind.Local).AddTicks(4897), "embrace world-class synergies" },
                    { 220, 1, 66.841149843273415m, new DateTime(2020, 4, 25, 17, 15, 51, 798, DateTimeKind.Local).AddTicks(321), "enable scalable convergence" },
                    { 221, 70, 95.180213076041990m, new DateTime(2021, 4, 6, 1, 50, 44, 768, DateTimeKind.Local).AddTicks(9667), "innovate integrated content" },
                    { 222, 63, 66.474130612021360m, new DateTime(2021, 2, 8, 3, 6, 7, 136, DateTimeKind.Local).AddTicks(5191), "leverage B2C web-readiness" },
                    { 223, 1, 34.918470546984375m, new DateTime(2018, 11, 8, 5, 48, 36, 814, DateTimeKind.Local).AddTicks(7051), "incubate dot-com channels" },
                    { 224, 97, 74.926445603457845m, new DateTime(2020, 6, 15, 10, 50, 7, 506, DateTimeKind.Local).AddTicks(245), "incentivize scalable functionalities" },
                    { 225, 74, 97.849761884851670m, new DateTime(2022, 10, 11, 8, 53, 8, 723, DateTimeKind.Local).AddTicks(5053), "monetize cross-media blockchains" },
                    { 226, 82, 9.8665099274876705m, new DateTime(2017, 6, 10, 1, 10, 46, 856, DateTimeKind.Local).AddTicks(6225), "brand innovative e-business" },
                    { 227, 18, 61.373063652477695m, new DateTime(2016, 5, 15, 9, 18, 11, 206, DateTimeKind.Local).AddTicks(2480), "orchestrate value-added infomediaries" },
                    { 228, 83, 93.402873685776040m, new DateTime(2017, 10, 11, 5, 29, 18, 742, DateTimeKind.Local).AddTicks(9544), "engage cross-platform mindshare" },
                    { 229, 87, 7.1820401813778135m, new DateTime(2017, 2, 21, 4, 14, 22, 244, DateTimeKind.Local).AddTicks(7694), "harness global web services" },
                    { 230, 80, 28.714008330001095m, new DateTime(2022, 7, 20, 11, 3, 0, 278, DateTimeKind.Local).AddTicks(9917), "grow 24/7 paradigms" },
                    { 231, 47, 64.741164701148940m, new DateTime(2015, 5, 30, 20, 18, 10, 147, DateTimeKind.Local).AddTicks(6809), "benchmark B2C e-commerce" },
                    { 232, 75, 71.479581754503230m, new DateTime(2021, 12, 8, 12, 14, 27, 456, DateTimeKind.Local).AddTicks(2317), "empower seamless convergence" },
                    { 233, 79, 37.968893188199520m, new DateTime(2016, 11, 29, 1, 35, 13, 160, DateTimeKind.Local).AddTicks(4282), "monetize global e-business" },
                    { 234, 37, 63.853871904801720m, new DateTime(2023, 11, 4, 9, 41, 45, 760, DateTimeKind.Local).AddTicks(6716), "matrix one-to-one systems" },
                    { 235, 78, 19.929307194502715m, new DateTime(2023, 6, 24, 1, 12, 31, 90, DateTimeKind.Local).AddTicks(4099), "redefine user-centric content" },
                    { 236, 76, 98.870177149170190m, new DateTime(2015, 12, 20, 6, 52, 6, 448, DateTimeKind.Local).AddTicks(2334), "strategize next-generation paradigms" },
                    { 237, 45, 99.867629109715445m, new DateTime(2018, 12, 6, 0, 23, 40, 57, DateTimeKind.Local).AddTicks(4953), "transition bricks-and-clicks web services" },
                    { 238, 52, 93.992636157102810m, new DateTime(2020, 5, 28, 13, 34, 36, 629, DateTimeKind.Local).AddTicks(895), "incentivize dot-com partnerships" },
                    { 239, 93, 20.677401808438930m, new DateTime(2018, 7, 17, 16, 50, 39, 639, DateTimeKind.Local).AddTicks(833), "deploy cross-media portals" },
                    { 240, 82, 93.458788665268540m, new DateTime(2016, 11, 20, 9, 1, 27, 340, DateTimeKind.Local).AddTicks(5195), "incentivize enterprise methodologies" },
                    { 241, 24, 81.465029024069755m, new DateTime(2017, 4, 18, 21, 2, 41, 739, DateTimeKind.Local).AddTicks(8682), "grow visionary platforms" },
                    { 242, 43, 19.217905377391030m, new DateTime(2022, 9, 15, 13, 42, 34, 254, DateTimeKind.Local).AddTicks(8443), "synthesize one-to-one paradigms" },
                    { 243, 53, 45.48307761631830m, new DateTime(2019, 9, 11, 20, 19, 9, 965, DateTimeKind.Local).AddTicks(657), "harness cutting-edge niches" },
                    { 244, 4, 39.023603788349025m, new DateTime(2022, 8, 20, 16, 44, 48, 534, DateTimeKind.Local).AddTicks(6924), "orchestrate impactful vortals" },
                    { 245, 3, 10.5632971478462315m, new DateTime(2016, 6, 2, 20, 21, 21, 222, DateTimeKind.Local).AddTicks(2350), "matrix web-enabled blockchains" },
                    { 246, 9, 28.836218339808080m, new DateTime(2017, 4, 24, 23, 46, 56, 505, DateTimeKind.Local).AddTicks(1710), "e-enable out-of-the-box interfaces" },
                    { 247, 46, 90.129518837443980m, new DateTime(2015, 3, 10, 10, 37, 40, 647, DateTimeKind.Local).AddTicks(7107), "scale strategic deliverables" },
                    { 248, 16, 36.209571138048205m, new DateTime(2020, 8, 17, 23, 23, 34, 458, DateTimeKind.Local).AddTicks(4835), "grow B2C infomediaries" },
                    { 249, 99, 33.175107376212490m, new DateTime(2018, 4, 18, 6, 42, 19, 718, DateTimeKind.Local).AddTicks(7689), "syndicate real-time e-business" },
                    { 250, 48, 56.380674481895670m, new DateTime(2022, 11, 6, 23, 24, 21, 630, DateTimeKind.Local).AddTicks(471), "productize robust solutions" },
                    { 251, 49, 92.644851222981205m, new DateTime(2019, 5, 4, 1, 10, 34, 892, DateTimeKind.Local).AddTicks(8471), "streamline turn-key technologies" },
                    { 252, 78, 90.087088024731460m, new DateTime(2020, 4, 26, 16, 38, 37, 468, DateTimeKind.Local).AddTicks(3573), "reinvent innovative e-markets" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 253, 4, 74.957492442183110m, new DateTime(2023, 12, 25, 6, 36, 14, 32, DateTimeKind.Local).AddTicks(2297), "expedite robust convergence" },
                    { 254, 29, 74.215964510951030m, new DateTime(2022, 4, 5, 3, 17, 21, 319, DateTimeKind.Local).AddTicks(9010), "empower bleeding-edge systems" },
                    { 255, 67, 39.75951702461745m, new DateTime(2018, 2, 22, 17, 52, 30, 182, DateTimeKind.Local).AddTicks(2207), "mesh robust eyeballs" },
                    { 256, 30, 34.439634129456090m, new DateTime(2018, 10, 2, 19, 55, 5, 965, DateTimeKind.Local).AddTicks(4483), "synthesize clicks-and-mortar paradigms" },
                    { 257, 61, 91.001671098849680m, new DateTime(2021, 6, 13, 20, 27, 24, 981, DateTimeKind.Local).AddTicks(1784), "reinvent revolutionary experiences" },
                    { 258, 53, 64.773164055588015m, new DateTime(2022, 1, 10, 3, 32, 47, 357, DateTimeKind.Local).AddTicks(7735), "exploit proactive schemas" },
                    { 259, 70, 23.067672235200755m, new DateTime(2016, 6, 3, 10, 2, 47, 592, DateTimeKind.Local).AddTicks(6826), "enable cross-media e-markets" },
                    { 260, 2, 60.75346385114995m, new DateTime(2021, 4, 28, 20, 0, 19, 679, DateTimeKind.Local).AddTicks(449), "integrate synergistic infomediaries" },
                    { 261, 83, 88.799754105333005m, new DateTime(2023, 10, 18, 3, 47, 4, 4, DateTimeKind.Local).AddTicks(5411), "seize B2C infomediaries" },
                    { 262, 51, 45.835841609264180m, new DateTime(2018, 4, 29, 15, 31, 13, 846, DateTimeKind.Local).AddTicks(8391), "incubate collaborative initiatives" },
                    { 263, 10, 70.683848274517940m, new DateTime(2015, 1, 23, 13, 21, 0, 958, DateTimeKind.Local).AddTicks(8724), "synergize B2C bandwidth" },
                    { 264, 9, 37.622067257332065m, new DateTime(2021, 1, 30, 6, 13, 48, 875, DateTimeKind.Local).AddTicks(978), "recontextualize 24/7 infrastructures" },
                    { 265, 78, 87.420850481772160m, new DateTime(2021, 8, 20, 12, 7, 25, 81, DateTimeKind.Local).AddTicks(3725), "reintermediate B2B systems" },
                    { 266, 97, 31.082254544524120m, new DateTime(2017, 12, 27, 9, 36, 7, 562, DateTimeKind.Local).AddTicks(6170), "e-enable dynamic content" },
                    { 267, 86, 25.37706171370380m, new DateTime(2016, 6, 11, 2, 20, 32, 15, DateTimeKind.Local).AddTicks(6486), "evolve integrated schemas" },
                    { 268, 41, 43.590579297856010m, new DateTime(2019, 3, 31, 19, 0, 23, 772, DateTimeKind.Local).AddTicks(9977), "benchmark integrated supply-chains" },
                    { 269, 35, 44.421091818795220m, new DateTime(2022, 7, 24, 16, 4, 44, 974, DateTimeKind.Local).AddTicks(563), "iterate bleeding-edge convergence" },
                    { 270, 5, 96.303434615064255m, new DateTime(2019, 3, 4, 19, 23, 32, 988, DateTimeKind.Local).AddTicks(9018), "grow magnetic relationships" },
                    { 271, 80, 57.694736288196620m, new DateTime(2018, 3, 9, 17, 46, 44, 745, DateTimeKind.Local).AddTicks(7878), "engineer cutting-edge systems" },
                    { 272, 15, 98.846711640444240m, new DateTime(2014, 11, 23, 9, 57, 3, 239, DateTimeKind.Local).AddTicks(9738), "grow frictionless synergies" },
                    { 273, 14, 53.807583164469380m, new DateTime(2022, 11, 6, 19, 2, 56, 695, DateTimeKind.Local).AddTicks(7895), "recontextualize mission-critical partnerships" },
                    { 274, 87, 50.267846846129835m, new DateTime(2023, 6, 28, 18, 53, 9, 953, DateTimeKind.Local).AddTicks(1349), "strategize front-end relationships" },
                    { 275, 32, 73.551699052062340m, new DateTime(2021, 3, 6, 21, 43, 56, 598, DateTimeKind.Local).AddTicks(5529), "mesh sexy applications" },
                    { 276, 79, 10.6930030924586595m, new DateTime(2023, 11, 29, 1, 38, 21, 906, DateTimeKind.Local).AddTicks(5559), "iterate one-to-one infomediaries" },
                    { 277, 54, 78.408191910151680m, new DateTime(2020, 3, 19, 0, 51, 44, 227, DateTimeKind.Local).AddTicks(8252), "matrix synergistic systems" },
                    { 278, 18, 95.449022647657120m, new DateTime(2017, 5, 14, 21, 44, 40, 141, DateTimeKind.Local).AddTicks(1711), "incentivize vertical bandwidth" },
                    { 279, 8, 96.395509304517540m, new DateTime(2019, 1, 8, 5, 44, 59, 800, DateTimeKind.Local).AddTicks(2018), "e-enable 24/7 web services" },
                    { 280, 18, 39.741302133841635m, new DateTime(2015, 3, 3, 21, 49, 39, 458, DateTimeKind.Local).AddTicks(395), "whiteboard B2B initiatives" },
                    { 281, 93, 76.394662762982730m, new DateTime(2017, 2, 20, 16, 42, 57, 698, DateTimeKind.Local).AddTicks(8209), "monetize magnetic action-items" },
                    { 282, 12, 79.906041622469530m, new DateTime(2020, 12, 7, 10, 35, 37, 43, DateTimeKind.Local).AddTicks(264), "envisioneer robust e-commerce" },
                    { 283, 38, 88.344180572128965m, new DateTime(2015, 2, 18, 8, 4, 21, 917, DateTimeKind.Local).AddTicks(9313), "strategize open-source e-markets" },
                    { 284, 49, 97.259742369780145m, new DateTime(2020, 12, 31, 15, 37, 38, 133, DateTimeKind.Local).AddTicks(22), "implement next-generation technologies" },
                    { 285, 79, 49.801709052045820m, new DateTime(2016, 12, 2, 23, 39, 13, 292, DateTimeKind.Local).AddTicks(9853), "matrix leading-edge portals" },
                    { 286, 72, 66.123629488339655m, new DateTime(2016, 7, 21, 16, 35, 14, 718, DateTimeKind.Local).AddTicks(9995), "strategize cutting-edge ROI" },
                    { 287, 26, 33.320518278157085m, new DateTime(2017, 12, 2, 17, 3, 46, 272, DateTimeKind.Local).AddTicks(9139), "deploy virtual technologies" },
                    { 288, 29, 97.953797331374385m, new DateTime(2017, 3, 6, 13, 39, 35, 977, DateTimeKind.Local).AddTicks(2118), "embrace leading-edge infrastructures" },
                    { 289, 8, 88.102638415530685m, new DateTime(2016, 9, 19, 21, 41, 32, 859, DateTimeKind.Local).AddTicks(2640), "reintermediate clicks-and-mortar supply-chains" },
                    { 290, 85, 43.872679030193175m, new DateTime(2018, 1, 10, 1, 28, 51, 908, DateTimeKind.Local).AddTicks(8268), "whiteboard robust deliverables" },
                    { 291, 44, 51.730907018801420m, new DateTime(2020, 3, 26, 0, 57, 2, 482, DateTimeKind.Local).AddTicks(4362), "utilize open-source eyeballs" },
                    { 292, 6, 42.986704822902430m, new DateTime(2014, 10, 30, 15, 38, 1, 658, DateTimeKind.Local).AddTicks(132), "utilize frictionless partnerships" },
                    { 293, 91, 97.191946211429220m, new DateTime(2022, 12, 13, 22, 28, 42, 941, DateTimeKind.Local).AddTicks(2505), "transform interactive applications" },
                    { 294, 17, 72.649729992607710m, new DateTime(2016, 11, 1, 21, 27, 0, 262, DateTimeKind.Local).AddTicks(3682), "incentivize proactive relationships" }
                });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "BookId", "AuthorId", "BasePrice", "PublishDate", "Title" },
                values: new object[,]
                {
                    { 295, 18, 52.588185443218060m, new DateTime(2019, 7, 24, 19, 37, 27, 728, DateTimeKind.Local).AddTicks(8101), "maximize interactive paradigms" },
                    { 296, 76, 91.267802799589685m, new DateTime(2018, 11, 29, 11, 2, 59, 833, DateTimeKind.Local).AddTicks(1108), "enhance enterprise web-readiness" },
                    { 297, 16, 86.50775106085990m, new DateTime(2015, 12, 15, 15, 35, 16, 221, DateTimeKind.Local).AddTicks(3329), "streamline B2C ROI" },
                    { 298, 50, 96.740458388033070m, new DateTime(2014, 7, 6, 9, 16, 8, 693, DateTimeKind.Local).AddTicks(4892), "enable efficient portals" },
                    { 299, 7, 97.06516170717080m, new DateTime(2018, 3, 31, 20, 32, 44, 372, DateTimeKind.Local).AddTicks(3250), "embrace compelling partnerships" },
                    { 300, 57, 57.14303406995770m, new DateTime(2014, 11, 27, 10, 35, 13, 887, DateTimeKind.Local).AddTicks(809), "utilize e-business schemas" }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 1, 1, "generate", false },
                    { 2, 2, "quantify", false },
                    { 3, 3, "compress", false },
                    { 4, 4, "parse", false },
                    { 5, 5, "reboot", false },
                    { 6, 6, "synthesize", true },
                    { 7, 7, "compress", true },
                    { 8, 8, "transmit", false },
                    { 9, 9, "synthesize", false },
                    { 10, 10, "quantify", false },
                    { 11, 11, "transmit", true },
                    { 12, 12, "bypass", false },
                    { 13, 13, "input", false },
                    { 14, 14, "quantify", true },
                    { 15, 15, "connect", false },
                    { 16, 16, "reboot", false },
                    { 17, 17, "back up", true },
                    { 18, 18, "transmit", false },
                    { 19, 19, "reboot", true },
                    { 20, 20, "copy", false },
                    { 21, 21, "input", true },
                    { 22, 22, "navigate", true },
                    { 23, 23, "compress", true },
                    { 24, 24, "calculate", true },
                    { 25, 25, "program", true },
                    { 26, 26, "hack", true },
                    { 27, 27, "override", true },
                    { 28, 28, "generate", true },
                    { 29, 29, "reboot", true },
                    { 30, 30, "hack", true },
                    { 31, 31, "quantify", false },
                    { 32, 32, "bypass", true },
                    { 33, 33, "hack", true },
                    { 34, 34, "copy", false },
                    { 35, 35, "input", true },
                    { 36, 36, "synthesize", true },
                    { 37, 37, "copy", false },
                    { 38, 38, "calculate", true },
                    { 39, 39, "calculate", false },
                    { 40, 40, "synthesize", true },
                    { 41, 41, "parse", false },
                    { 42, 42, "reboot", true }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 43, 43, "program", true },
                    { 44, 44, "hack", true },
                    { 45, 45, "parse", false },
                    { 46, 46, "input", true },
                    { 47, 47, "generate", false },
                    { 48, 48, "calculate", false },
                    { 49, 49, "program", false },
                    { 50, 50, "navigate", true },
                    { 51, 51, "index", true },
                    { 52, 52, "input", true },
                    { 53, 53, "back up", false },
                    { 54, 54, "compress", true },
                    { 55, 55, "index", true },
                    { 56, 56, "generate", true },
                    { 57, 57, "parse", true },
                    { 58, 58, "connect", true },
                    { 59, 59, "navigate", false },
                    { 60, 60, "calculate", true },
                    { 61, 61, "synthesize", true },
                    { 62, 62, "back up", false },
                    { 63, 63, "hack", false },
                    { 64, 64, "parse", false },
                    { 65, 65, "bypass", true },
                    { 66, 66, "connect", true },
                    { 67, 67, "transmit", true },
                    { 68, 68, "copy", true },
                    { 69, 69, "back up", false },
                    { 70, 70, "reboot", false },
                    { 71, 71, "calculate", false },
                    { 72, 72, "quantify", true },
                    { 73, 73, "input", false },
                    { 74, 74, "parse", false },
                    { 75, 75, "navigate", true },
                    { 76, 76, "connect", true },
                    { 77, 77, "index", true },
                    { 78, 78, "generate", false },
                    { 79, 79, "index", false },
                    { 80, 80, "back up", false },
                    { 81, 81, "bypass", false },
                    { 82, 82, "generate", false },
                    { 83, 83, "back up", true },
                    { 84, 84, "reboot", false }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 85, 85, "parse", false },
                    { 86, 86, "transmit", true },
                    { 87, 87, "quantify", false },
                    { 88, 88, "input", false },
                    { 89, 89, "transmit", true },
                    { 90, 90, "program", true },
                    { 91, 91, "parse", false },
                    { 92, 92, "connect", false },
                    { 93, 93, "copy", false },
                    { 94, 94, "calculate", false },
                    { 95, 95, "reboot", false },
                    { 96, 96, "calculate", true },
                    { 97, 97, "back up", false },
                    { 98, 98, "parse", true },
                    { 99, 99, "program", true },
                    { 100, 100, "copy", true },
                    { 101, 101, "copy", true },
                    { 102, 102, "calculate", false },
                    { 103, 103, "input", false },
                    { 104, 104, "reboot", true },
                    { 105, 105, "connect", true },
                    { 106, 106, "reboot", true },
                    { 107, 107, "back up", false },
                    { 108, 108, "input", true },
                    { 109, 109, "program", false },
                    { 110, 110, "parse", true },
                    { 111, 111, "back up", true },
                    { 112, 112, "copy", true },
                    { 113, 113, "input", true },
                    { 114, 114, "program", false },
                    { 115, 115, "quantify", true },
                    { 116, 116, "program", false },
                    { 117, 117, "navigate", false },
                    { 118, 118, "quantify", true },
                    { 119, 119, "override", false },
                    { 120, 120, "transmit", true },
                    { 121, 121, "index", true },
                    { 122, 122, "hack", false },
                    { 123, 123, "back up", true },
                    { 124, 124, "reboot", false },
                    { 125, 125, "synthesize", false },
                    { 126, 126, "navigate", true }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 127, 127, "quantify", true },
                    { 128, 128, "calculate", true },
                    { 129, 129, "input", true },
                    { 130, 130, "bypass", true },
                    { 131, 131, "transmit", true },
                    { 132, 132, "synthesize", true },
                    { 133, 133, "reboot", false },
                    { 134, 134, "parse", true },
                    { 135, 135, "override", true },
                    { 136, 136, "hack", true },
                    { 137, 137, "quantify", true },
                    { 138, 138, "quantify", true },
                    { 139, 139, "hack", true },
                    { 140, 140, "copy", true },
                    { 141, 141, "calculate", true },
                    { 142, 142, "input", true },
                    { 143, 143, "navigate", true },
                    { 144, 144, "back up", true },
                    { 145, 145, "hack", true },
                    { 146, 146, "hack", false },
                    { 147, 147, "bypass", true },
                    { 148, 148, "bypass", true },
                    { 149, 149, "copy", true },
                    { 150, 150, "back up", true },
                    { 151, 151, "quantify", true },
                    { 152, 152, "quantify", true },
                    { 153, 153, "copy", true },
                    { 154, 154, "copy", true },
                    { 155, 155, "program", true },
                    { 156, 156, "index", true },
                    { 157, 157, "hack", true },
                    { 158, 158, "compress", false },
                    { 159, 159, "calculate", false },
                    { 160, 160, "reboot", false },
                    { 161, 161, "back up", false },
                    { 162, 162, "calculate", true },
                    { 163, 163, "compress", true },
                    { 164, 164, "parse", true },
                    { 165, 165, "override", true },
                    { 166, 166, "bypass", true },
                    { 167, 167, "override", false },
                    { 168, 168, "compress", true }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 169, 169, "calculate", false },
                    { 170, 170, "connect", false },
                    { 171, 171, "index", true },
                    { 172, 172, "index", true },
                    { 173, 173, "bypass", false },
                    { 174, 174, "input", false },
                    { 175, 175, "back up", true },
                    { 176, 176, "compress", true },
                    { 177, 177, "program", true },
                    { 178, 178, "program", true },
                    { 179, 179, "calculate", false },
                    { 180, 180, "bypass", true },
                    { 181, 181, "synthesize", false },
                    { 182, 182, "connect", true },
                    { 183, 183, "synthesize", true },
                    { 184, 184, "navigate", true },
                    { 185, 185, "index", false },
                    { 186, 186, "hack", false },
                    { 187, 187, "input", false },
                    { 188, 188, "transmit", false },
                    { 189, 189, "navigate", true },
                    { 190, 190, "connect", true },
                    { 191, 191, "generate", false },
                    { 192, 192, "generate", false },
                    { 193, 193, "generate", true },
                    { 194, 194, "index", false },
                    { 195, 195, "override", false },
                    { 196, 196, "synthesize", false },
                    { 197, 197, "parse", true },
                    { 198, 198, "parse", true },
                    { 199, 199, "parse", false },
                    { 200, 200, "parse", false },
                    { 201, 201, "override", true },
                    { 202, 202, "navigate", false },
                    { 203, 203, "index", false },
                    { 204, 204, "quantify", false },
                    { 205, 205, "transmit", true },
                    { 206, 206, "synthesize", false },
                    { 207, 207, "calculate", true },
                    { 208, 208, "compress", false },
                    { 209, 209, "transmit", false },
                    { 210, 210, "calculate", true }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 211, 211, "bypass", true },
                    { 212, 212, "quantify", false },
                    { 213, 213, "reboot", false },
                    { 214, 214, "index", true },
                    { 215, 215, "parse", false },
                    { 216, 216, "reboot", false },
                    { 217, 217, "transmit", false },
                    { 218, 218, "bypass", false },
                    { 219, 219, "generate", true },
                    { 220, 220, "parse", true },
                    { 221, 221, "program", true },
                    { 222, 222, "connect", true },
                    { 223, 223, "compress", false },
                    { 224, 224, "hack", false },
                    { 225, 225, "navigate", true },
                    { 226, 226, "quantify", false },
                    { 227, 227, "calculate", true },
                    { 228, 228, "navigate", false },
                    { 229, 229, "synthesize", true },
                    { 230, 230, "override", true },
                    { 231, 231, "quantify", false },
                    { 232, 232, "connect", false },
                    { 233, 233, "navigate", false },
                    { 234, 234, "navigate", false },
                    { 235, 235, "input", true },
                    { 236, 236, "compress", true },
                    { 237, 237, "quantify", false },
                    { 238, 238, "index", true },
                    { 239, 239, "compress", true },
                    { 240, 240, "parse", true },
                    { 241, 241, "bypass", true },
                    { 242, 242, "compress", false },
                    { 243, 243, "hack", false },
                    { 244, 244, "override", false },
                    { 245, 245, "calculate", true },
                    { 246, 246, "index", false },
                    { 247, 247, "generate", false },
                    { 248, 248, "generate", false },
                    { 249, 249, "parse", false },
                    { 250, 250, "synthesize", false },
                    { 251, 251, "bypass", true },
                    { 252, 252, "program", true }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 253, 253, "compress", true },
                    { 254, 254, "compress", true },
                    { 255, 255, "quantify", false },
                    { 256, 256, "calculate", true },
                    { 257, 257, "transmit", true },
                    { 258, 258, "quantify", true },
                    { 259, 259, "parse", false },
                    { 260, 260, "calculate", false },
                    { 261, 261, "copy", false },
                    { 262, 262, "generate", true },
                    { 263, 263, "synthesize", false },
                    { 264, 264, "bypass", true },
                    { 265, 265, "compress", false },
                    { 266, 266, "compress", true },
                    { 267, 267, "back up", false },
                    { 268, 268, "generate", true },
                    { 269, 269, "synthesize", false },
                    { 270, 270, "transmit", true },
                    { 271, 271, "navigate", false },
                    { 272, 272, "generate", true },
                    { 273, 273, "calculate", true },
                    { 274, 274, "back up", false },
                    { 275, 275, "navigate", false },
                    { 276, 276, "copy", false },
                    { 277, 277, "quantify", true },
                    { 278, 278, "navigate", true },
                    { 279, 279, "override", true },
                    { 280, 280, "calculate", true },
                    { 281, 281, "back up", false },
                    { 282, 282, "synthesize", false },
                    { 283, 283, "bypass", true },
                    { 284, 284, "input", true },
                    { 285, 285, "quantify", true },
                    { 286, 286, "generate", false },
                    { 287, 287, "compress", false },
                    { 288, 288, "parse", true },
                    { 289, 289, "copy", false },
                    { 290, 290, "hack", false },
                    { 291, 291, "compress", true },
                    { 292, 292, "transmit", true },
                    { 293, 293, "quantify", false },
                    { 294, 294, "parse", false }
                });

            migrationBuilder.InsertData(
                table: "Covers",
                columns: new[] { "CoverId", "BookId", "DesignIdeas", "DigitalOnly" },
                values: new object[,]
                {
                    { 295, 295, "override", true },
                    { 296, 296, "connect", true },
                    { 297, 297, "calculate", false },
                    { 298, 298, "override", false },
                    { 299, 299, "connect", true },
                    { 300, 300, "reboot", true }
                });

            migrationBuilder.CreateIndex(
                name: "IX_ArtistCover_CoversCoverId",
                table: "ArtistCover",
                column: "CoversCoverId");

            migrationBuilder.CreateIndex(
                name: "IX_Books_AuthorId",
                table: "Books",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_Covers_BookId",
                table: "Covers",
                column: "BookId",
                unique: true);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ArtistCover");

            migrationBuilder.DropTable(
                name: "Artists");

            migrationBuilder.DropTable(
                name: "Covers");

            migrationBuilder.DropTable(
                name: "Books");

            migrationBuilder.DropTable(
                name: "Authors");
        }
    }
}
